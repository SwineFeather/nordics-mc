import{S as g,s as u,bl as m,bm as _}from"./index-DUDTAd9W.js";const c=new Map,l=new Map,h=async e=>{var r;if(c.has(e))return c.get(e);try{const t=await fetch(`/stats/data/playerdata/${e}.json`);if(!t.ok||!((r=t.headers.get("content-type"))!=null&&r.includes("application/json")))return{};const n=await t.json(),o={};return Object.entries(n).forEach(([i,s])=>{s&&typeof s.value=="number"&&(o[i]=s.value)}),c.set(e,o),o}catch(t){return t instanceof SyntaxError?{}:(console.warn(`Failed to fetch detailed stats for ${e}:`,t),{})}},b=async e=>{if(l.has(e))return l.get(e);try{const{data:r,error:t}=await u.from("player_badges").select("*").eq("player_uuid",e).order("assigned_at",{ascending:!1});if(t)return console.error("Error fetching badges:",t),[];const n=r||[];return l.set(e,n),n}catch(r){return console.error("Error fetching badges:",r),[]}},P=(e,r,t)=>{const n=r.total_xp||0;m(n);const o=_(r),i=t.map(s=>({id:s.id,player_uuid:s.player_uuid,badge_type:s.badge_type,badge_color:s.badge_color,is_verified:s.is_verified,assigned_at:s.assigned_at,assigned_by:s.assigned_by,icon:s.icon,icon_only:s.icon_only}));return{id:e.uuid,username:e.name,displayName:e.name,joinDate:e.created_at,lastSeen:e.last_seen.toString(),stats:o,badges:i,serverRole:"player",isOnline:!1,isWebsiteUser:!1,achievements:[]}},S=async e=>{if(!e||e.trim().length<2)return{players:[],count:0};try{console.log(`Searching for players with term: "${e}"`);const{data:r,error:t}=await u.from("players").select("*").ilike("name",`%${e.trim()}%`).order("last_seen",{ascending:!1}).limit(20);if(t)throw console.error("Error searching players:",t),t;if(!r||r.length===0)return{players:[],count:0};const n=r.map(a=>({uuid:a.uuid,name:a.name,created_at:a.created_at,last_seen:a.last_seen,updated_at:a.updated_at})),o=n.map(a=>a.uuid),[i,s]=await Promise.all([Promise.all(o.map(a=>h(a))),Promise.all(o.map(a=>b(a)))]),d=n.map((a,y)=>{const p=i[y],f=s[y];return P(a,p,f)});return{players:d,count:d.length}}catch(r){return console.error("Error in searchPlayers:",r),{players:[],count:0}}},v=e=>{const{data:r,isLoading:t,isFetching:n,error:o}=g({queryKey:["playerSearch",e],queryFn:()=>S(e),enabled:e.trim().length>=2,retry:1,retryDelay:500,staleTime:3e5,refetchOnWindowFocus:!1}),i=(r==null?void 0:r.players)??[],s=(r==null?void 0:r.count)??0;return{players:i,count:s,loading:t,loadingMore:n&&!t,error:o}};export{v as u};

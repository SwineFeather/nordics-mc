var ze=Object.defineProperty;var Ge=(a,n,i)=>n in a?ze(a,n,{enumerable:!0,configurable:!0,writable:!0,value:i}):a[n]=i;var ne=(a,n,i)=>Ge(a,typeof n!="symbol"?n+"":n,i);import{aF as A,s as M,r as c,ay as ge,j as e,o as K,p as X,q as Z,t as Q,b5 as Ve,bc as me,v as j,O as k,Y as $e,bd as qe,aT as H,be as He,X as I,b0 as We,Z as O,$ as B,a0 as z,a1 as G,a2 as y,aY as oe,aZ as ie,a_ as le,a$ as ce,b1 as Ye,w as xe,x as ye,z as be,G as ve,bf as je,y as Je,H as we,U as ee,aX as Ke,aq as Xe,L as Ze,B as ke,aH as Te,bg as Qe,aD as ea,aM as Ee,W as Ae,bh as W,u as aa}from"./index-BDwxLbfg.js";import{S as $}from"./skeleton-Cl9ccUyr.js";import{I as ra}from"./imageStorageService-Bbnc4G-y.js";import{L as ae}from"./loader-circle-BQXbm3ye.js";import{I as Ne}from"./image-CdpHxvLf.js";import{U as ue}from"./upload-B5TiAeXb.js";import{L as ta,F as sa}from"./link-BSO0-lYh.js";import{C as Se}from"./copy-D3RDa5qZ.js";import{E as he}from"./external-link-DMGOVlse.js";import{u as na}from"./use-toast-IlxM9Ntm.js";import{S as Ce}from"./square-pen-BbMsOEvb.js";import{S as oa}from"./save-CBFCkKxY.js";import{B as ia}from"./banknote-CpRk0iOT.js";import{T as De}from"./TownProfileModal-wTTCjwjS.js";import{L as Ue}from"./list-DgrYmvyF.js";import{T as la}from"./TownProfilePicture-CY--EK_H.js";const _e={baseUrl:"https://erdconvorgecupvavlwv.supabase.co/functions/v1/serve-image/",allowedDomains:["cdn.discordapp.com","media.discordapp.net","i.imgur.com","imgur.com","images-ext-1.discordapp.net","images-ext-2.discordapp.net"],allowedFormats:["png","jpg","jpeg","webp","gif"],fallbackUrl:"https://via.placeholder.com/300x200/1e40af/ffffff?text=No+Image"};class pe{static transformToBlueMapUrl(n,i,d){const l=this.cleanNameForUrl(i),u=d==="nation"?"%nation%":"%town%";return`${this.DEFAULT_CONFIG.baseUrl}${d}s/${u}`.replace(u,l)}static getBlueMapUrlTemplate(n){const i=n==="nation"?"%nation%":"%town%";return`${this.DEFAULT_CONFIG.baseUrl}${n}s/${i}`}static cleanNameForUrl(n){return n.replace(/[^a-zA-Z0-9\s]/g,"").replace(/\s+/g,"_").toLowerCase()}static async getOriginalUrl(n,i){return null}static generateProxyUrl(n,i,d){const l=this.cleanNameForUrl(i),u=encodeURIComponent(n);return`${this.DEFAULT_CONFIG.baseUrl}${d}s/${l}?url=${u}`}}ne(pe,"DEFAULT_CONFIG",{baseUrl:_e.baseUrl,placeholder:"%nation%",fallbackUrl:_e.fallbackUrl});class de{static async updateNationImage(n,i){try{if(console.log(`Updating nation image for nation ${n} with URL: ${i}`),!this.isValidImageUrl(i))return A.error("Please provide a valid image URL (must end with .jpg, .jpeg, .png, .gif, .webp)"),!1;const{data:d,error:l}=await M.from("nations").select("name").eq("id",n).single();if(l||!d)return A.error("Nation not found"),!1;const{data:u,error:o}=await M.from("nations").update({image_url:i}).eq("id",n).select().single();return o?(console.error("Error updating nation image:",o),o.code==="42501"?A.error("You do not have permission to update this nation's image. Only nation leaders and staff can update nation images."):A.error("Failed to update nation image. Please try again."),!1):u?(A.success("Nation image updated successfully! The image has been stored on our server for BlueMap compatibility."),console.log("Nation image updated successfully:",u),!0):(A.error("Nation not found"),!1)}catch(d){return console.error("Error in updateNationImage:",d),A.error("An unexpected error occurred while updating the nation image"),!1}}static async uploadNationImageFile(n,i){try{console.log(`Uploading image file for nation ${n}`);const{data:d,error:l}=await M.from("nations").select("name").eq("id",n).single();if(l||!d)return A.error("Nation not found"),!1;const u=await ra.uploadFile(i,d.name,"nation"),{data:o,error:b}=await M.from("nations").update({image_url:u}).eq("id",n).select().single();return b?(console.error("Error updating nation image:",b),b.code==="42501"?A.error("You do not have permission to update this nation's image. Only nation leaders and staff can update nation images."):A.error("Failed to update nation image. Please try again."),!1):o?(A.success("Nation image uploaded successfully! The image has been stored on our server for BlueMap compatibility."),console.log("Nation image uploaded successfully:",o),!0):(A.error("Nation not found"),!1)}catch(d){return console.error("Error in uploadNationImageFile:",d),A.error("An unexpected error occurred while uploading the nation image"),!1}}static async getNationImage(n){try{const{data:i,error:d}=await M.from("nations").select("image_url").eq("id",n).single();return d?(console.error("Error fetching nation image:",d),null):(i==null?void 0:i.image_url)||null}catch(i){return console.error("Error in getNationImage:",i),null}}static async canUpdateNationImage(n){try{const{data:{user:i},error:d}=await M.auth.getUser();if(d||!i)return!1;const{data:l,error:u}=await M.from("profiles").select("role, full_name").eq("id",i.id).single();if(u||!l)return!1;if(["admin","moderator"].includes(l.role))return!0;const{data:o,error:b}=await M.from("nations").select("leader_name").eq("id",n).single();return b||!o?!1:o.leader_name===l.full_name}catch(i){return console.error("Error checking nation image update permissions:",i),!1}}static isValidImageUrl(n){try{const i=new URL(n),d=[".jpg",".jpeg",".png",".gif",".webp"],l=i.pathname.toLowerCase();return d.some(u=>l.endsWith(u))}catch{return!1}}static async getBlueMapUrl(n){return pe.getBlueMapUrlTemplate("nation").replace("%nation%",n.replace(/[^a-zA-Z0-9\s]/g,"").replace(/\s+/g,"_").toLowerCase())}static getBlueMapUrlTemplate(){return pe.getBlueMapUrlTemplate("nation")}static getImageProxyUrl(n){return n}static getRawImageUrl(n){return n}}const ca=({isOpen:a,onClose:n,nationId:i,nationName:d,currentImageUrl:l,onImageUpdated:u})=>{const[o,b]=c.useState(l||""),[_,S]=c.useState(!1),[w,T]=c.useState(!1),[N,r]=c.useState(!0),[m,C]=c.useState(null),[F,R]=c.useState(null),[s,t]=c.useState(null),[x,D]=c.useState(!1),[v,P]=c.useState("file"),[h,g]=c.useState(0),p=c.useRef(null);ge(),c.useEffect(()=>{a&&(L(),b(l||""),C(l||null),t(null),g(0))},[a,l,i]);const L=async()=>{r(!0);try{const f=await de.canUpdateNationImage(i);T(f)}catch(f){console.error("Error checking permissions:",f),T(!1)}finally{r(!1)}},Me=f=>{b(f),R(null),f&&re(f)?C(f):C(null)},re=f=>{try{const E=new URL(f),U=[".jpg",".jpeg",".png",".gif",".webp"],V=E.pathname.toLowerCase();return U.some(q=>V.endsWith(q))}catch{return!1}},Fe=f=>{var V;if(!f.type.startsWith("image/"))return"Please select an image file";if(f.size>5*1024*1024)return"File size must be less than 5MB";const E=[".jpg",".jpeg",".png",".gif",".webp"],U="."+((V=f.name.split(".").pop())==null?void 0:V.toLowerCase());return E.includes(U)?null:"Please select a JPEG, PNG, GIF, or WebP image"},te=c.useCallback(f=>{const E=Fe(f);if(E){A.error(E);return}t(f),R(null);const U=URL.createObjectURL(f);return C(U),()=>{U&&URL.revokeObjectURL(U)}},[]),se=c.useCallback(f=>{f.preventDefault(),f.stopPropagation(),f.type==="dragenter"||f.type==="dragover"?D(!0):f.type==="dragleave"&&D(!1)},[]),Ie=c.useCallback(f=>{f.preventDefault(),f.stopPropagation(),D(!1);const U=Array.from(f.dataTransfer.files).find(V=>V.type.startsWith("image/"));U?te(U):A.error("Please drop an image file")},[te]),Pe=async f=>{if(f.preventDefault(),!(v==="url"&&!o.trim())&&!(v==="file"&&!s)){S(!0),g(0);try{let E;if(v==="file"&&s){g(50);const V=await de.uploadNationImageFile(i,s);if(g(100),V){const{data:q}=await M.from("nations").select("image_url").eq("id",i).single();q!=null&&q.image_url&&(u==null||u(q.image_url)),n()}return}else E=o.trim();await de.updateNationImage(i,E)&&(u==null||u(E),n())}catch(E){console.error("Error uploading image:",E),A.error("Failed to upload image. Please try again.")}finally{S(!1),g(0)}}},fe=()=>{R("Failed to load image preview. Please check the file or URL.")},Le=()=>{o&&navigator.clipboard.writeText(o)},Oe=()=>{o&&window.open(o,"_blank")},Be=()=>{s&&(t(null),m&&m.startsWith("blob:")&&URL.revokeObjectURL(m),C(null))};return N?e.jsx(K,{open:a,onOpenChange:n,children:e.jsxs(X,{children:[e.jsx(Z,{children:e.jsx(Q,{children:"Checking Permissions"})}),e.jsxs("div",{className:"flex items-center justify-center py-8",children:[e.jsx(ae,{className:"h-6 w-6 animate-spin"}),e.jsx("span",{className:"ml-2",children:"Checking permissions..."})]})]})}):w?e.jsx(K,{open:a,onOpenChange:n,children:e.jsxs(X,{className:"max-w-3xl max-h-[90vh] overflow-y-auto text-sm",children:[e.jsxs(Z,{children:[e.jsxs(Q,{className:"flex items-center gap-2 text-lg",children:[e.jsx(Ne,{className:"h-5 w-5"}),"Update ",d," Image"]}),e.jsx(me,{className:"text-sm",children:"Upload an image for your nation. You can either upload a file directly or provide a URL to an image."})]}),e.jsxs("form",{onSubmit:Pe,className:"space-y-6",children:[e.jsxs("div",{className:"flex gap-2",children:[e.jsxs(j,{type:"button",variant:v==="file"?"default":"outline",onClick:()=>P("file"),className:"flex items-center gap-2",children:[e.jsx(ue,{className:"h-4 w-4"}),"Upload File"]}),e.jsxs(j,{type:"button",variant:v==="url"?"default":"outline",onClick:()=>P("url"),className:"flex items-center gap-2",children:[e.jsx(ta,{className:"h-4 w-4"}),"Image URL"]})]}),v==="file"?e.jsx("div",{className:"space-y-4",children:e.jsxs("div",{className:"space-y-2",children:[e.jsx(k,{className:"text-sm font-medium",children:"Upload Image File"}),e.jsx("div",{className:`border-2 border-dashed rounded-lg p-4 sm:p-6 text-center transition-colors overflow-hidden min-w-0 ${x?"border-primary bg-primary/5":"border-muted-foreground/25 hover:border-muted-foreground/50"}`,onDragEnter:se,onDragLeave:se,onDragOver:se,onDrop:Ie,children:s?e.jsxs("div",{className:"space-y-4",children:[e.jsxs("div",{className:"relative inline-block",children:[e.jsx("img",{src:m||"",alt:"Preview",className:"max-h-48 max-w-full rounded-lg object-contain",onError:fe}),e.jsx(j,{type:"button",size:"icon",variant:"destructive",className:"absolute -top-2 -right-2 w-6 h-6",onClick:Be,children:e.jsx($e,{className:"w-3 h-3"})})]}),e.jsxs("div",{className:"text-sm text-muted-foreground",children:[e.jsxs("p",{children:[e.jsx("strong",{children:"File:"})," ",s.name]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Size:"})," ",(s.size/1024/1024).toFixed(2)," MB"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Type:"})," ",s.type]})]})]}):e.jsxs("div",{className:"space-y-4",children:[e.jsx(sa,{className:"h-12 w-12 mx-auto text-muted-foreground"}),e.jsxs("div",{className:"max-w-full",children:[e.jsxs("p",{className:"text-sm text-muted-foreground break-words",children:["Drag and drop an image file here, or"," ",e.jsx("button",{type:"button",className:"text-primary hover:underline",onClick:()=>{var f;return(f=p.current)==null?void 0:f.click()},children:"click to browse"})]}),e.jsx("p",{className:"text-xs text-muted-foreground mt-1 break-words",children:"Supports JPEG, PNG, GIF, WebP (max 5MB)"})]})]})}),e.jsx("input",{ref:p,type:"file",accept:"image/*",className:"hidden",onChange:f=>{var U;const E=(U=f.target.files)==null?void 0:U[0];E&&te(E)}})]})}):e.jsxs("div",{className:"space-y-4",children:[e.jsxs(qe,{children:[e.jsx(H,{className:"h-4 w-4"}),e.jsxs(He,{children:[e.jsx("strong",{children:"How to upload an image:"}),e.jsxs("ol",{className:"mt-2 ml-4 list-decimal space-y-1 text-sm",children:[e.jsx("li",{children:"Upload your image to Discord, Imgur, or any image hosting service"}),e.jsx("li",{children:'Right-click on the uploaded image and select "Copy image address" or "Copy link"'}),e.jsx("li",{children:"Paste the link in the field below"}),e.jsx("li",{children:"The link should end with .jpg, .jpeg, .png, .gif, or .webp"})]})]})]}),e.jsxs("div",{className:"space-y-2",children:[e.jsx(k,{htmlFor:"imageUrl",className:"text-sm font-medium",children:"Image URL"}),e.jsxs("div",{className:"flex gap-2",children:[e.jsx(I,{id:"imageUrl",type:"url",placeholder:"https://example.com/image.png",value:o,onChange:f=>Me(f.target.value),className:"flex-1",required:v==="url"}),o&&e.jsx(j,{type:"button",variant:"outline",size:"icon",onClick:Le,title:"Copy URL",children:e.jsx(Se,{className:"h-4 w-4"})})]}),o&&!re(o)&&e.jsx("p",{className:"text-sm text-destructive",children:"Please provide a valid image URL (must end with .jpg, .jpeg, .png, .gif, .webp)"})]})]}),m&&e.jsxs("div",{className:"space-y-2",children:[e.jsx(k,{className:"text-sm font-medium",children:"Preview"}),e.jsxs("div",{className:"relative",children:[e.jsx("img",{src:m,alt:`${d} preview`,className:"max-h-64 w-auto rounded-lg border object-contain",onError:fe}),e.jsx("div",{className:"absolute top-2 right-2 flex gap-1",children:e.jsx(j,{type:"button",variant:"secondary",size:"sm",onClick:Oe,title:"Open image in new tab",children:e.jsx(he,{className:"h-4 w-4"})})})]}),F&&e.jsx("p",{className:"text-sm text-destructive",children:F})]}),_&&h>0&&e.jsxs("div",{className:"space-y-2",children:[e.jsx(k,{className:"text-sm font-medium",children:"Upload Progress"}),e.jsx("div",{className:"w-full bg-muted rounded-full h-2",children:e.jsx("div",{className:"bg-primary h-2 rounded-full transition-all duration-300",style:{width:`${h}%`}})}),e.jsxs("p",{className:"text-sm text-muted-foreground",children:[h,"% complete"]})]}),l&&e.jsxs("div",{className:"space-y-2",children:[e.jsx(k,{className:"text-sm font-medium",children:"Current Image"}),e.jsxs("div",{className:"flex items-center gap-2 text-xs text-muted-foreground",children:[e.jsx(Ne,{className:"h-4 w-4 flex-shrink-0"}),e.jsx("span",{className:"truncate flex-1",title:l,children:l.includes("supabase.co/storage")?"Stored in Supabase Storage":l.length>50?l.substring(0,50)+"...":l}),e.jsx(j,{type:"button",variant:"ghost",size:"sm",onClick:()=>window.open(l,"_blank"),className:"flex-shrink-0",title:"Open image in new tab",children:e.jsx(he,{className:"h-4 w-4"})}),e.jsx(j,{type:"button",variant:"ghost",size:"sm",onClick:()=>navigator.clipboard.writeText(l),className:"flex-shrink-0",title:"Copy image URL",children:e.jsx(Se,{className:"h-4 w-4"})})]})]}),e.jsxs("div",{className:"flex justify-end gap-2",children:[e.jsx(j,{type:"button",variant:"outline",onClick:n,children:"Cancel"}),e.jsx(j,{type:"submit",disabled:_||v==="url"&&(!o.trim()||!re(o))||v==="file"&&!s,children:_?e.jsxs(e.Fragment,{children:[e.jsx(ae,{className:"mr-2 h-4 w-4 animate-spin"}),v==="file"?"Uploading...":"Updating..."]}):e.jsxs(e.Fragment,{children:[e.jsx(ue,{className:"mr-2 h-4 w-4"}),v==="file"?"Upload Image":"Update Image"]})})]})]})]})}):e.jsx(K,{open:a,onOpenChange:n,children:e.jsxs(X,{children:[e.jsxs(Z,{children:[e.jsxs(Q,{className:"flex items-center gap-2",children:[e.jsx(Ve,{className:"h-5 w-5 text-destructive"}),"Access Denied"]}),e.jsxs(me,{children:["You do not have permission to update the image for ",d,". Only nation leaders and staff can update nation images."]})]}),e.jsx("div",{className:"flex justify-end",children:e.jsx(j,{onClick:n,children:"Close"})})]})})};class Re{static getNationImageUrl(n,i){const l={...{baseUrl:"https://erdconvorgecupvavlwv.supabase.co/storage/v1/object/public/nation-town-images/nations/",placeholder:"%nation%",fallbackUrl:"https://via.placeholder.com/300x200/1e40af/ffffff?text=No+Nation+Image",imageExtensions:this.DEFAULT_EXTENSIONS},...i},u=this.cleanNameForUrl(n);return l.baseUrl.replace(l.placeholder,u)}static getTownImageUrl(n,i){const l={...{baseUrl:"https://erdconvorgecupvavlwv.supabase.co/storage/v1/object/public/nation-town-images/towns/",placeholder:"%town%",fallbackUrl:"https://via.placeholder.com/300x200/1e40af/ffffff?text=No+Town+Image",imageExtensions:this.DEFAULT_EXTENSIONS},...i},u=this.cleanNameForUrl(n);return l.baseUrl.replace(l.placeholder,u)}static cleanNameForUrl(n){return n.replace(/[^a-zA-Z0-9\s]/g,"").replace(/\s+/g,"_").toLowerCase()}static async checkImageExists(n){try{return(await fetch(n,{method:"HEAD"})).ok}catch(i){return console.warn(`Failed to check image existence for ${n}:`,i),!1}}static async getBestImageUrl(n,i,d){return n||d||"https://via.placeholder.com/300x200/1e40af/ffffff?text=No+Image"}static async getNationImageWithFallback(n,i){const d=this.getNationImageUrl(n);return this.getBestImageUrl(i,d,"https://via.placeholder.com/300x200/1e40af/ffffff?text=No+Nation+Image")}static async getTownImageWithFallback(n,i){const d=this.getTownImageUrl(n);return this.getBestImageUrl(i,d,"https://via.placeholder.com/300x200/1e40af/ffffff?text=No+Town+Image")}}ne(Re,"DEFAULT_EXTENSIONS",["png","jpg","jpeg","webp"]);function da(a,n,i,d){const[l,u]=c.useState(""),[o,b]=c.useState(!0),[_,S]=c.useState(null);return c.useEffect(()=>{let w=!0;return(async()=>{var N;try{b(!0),S(null);let r;n==="nation"&&(r=await Re.getNationImageWithFallback(a,i)),w&&(u(r),b(!1),(N=d==null?void 0:d.onSuccess)==null||N.call(d,r))}catch(r){if(w){const m=r instanceof Error?r:new Error("Failed to load image");S(m),b(!1)}}})(),()=>{w=!1}},[a,n,i,d]),{imageUrl:l,isLoading:o,error:_,reload:()=>{b(!0),S(null)}}}function ma(a,n,i){return da(a,"nation",n,i)}const Y={"Traditional Nobility":{Monarch:"A king, queen, emperor, or other royal ruler",Emperor:"Supreme ruler of an empire",King:"Male ruler of a kingdom",Queen:"Female ruler of a kingdom",Prince:"Son of a monarch, may rule a principality",Princess:"Daughter of a monarch, may rule a principality",Duke:"Noble ruler of a duchy",Duchess:"Female noble ruler of a duchy",Count:"Noble ruler of a county",Countess:"Female noble ruler of a county",Baron:"Noble ruler of a barony",Baroness:"Female noble ruler of a barony",Archduke:"High-ranking noble ruler",Archduchess:"High-ranking female noble ruler",Viceroy:"Representative ruler for a monarch",Regent:"Temporary ruler while monarch is unable to rule",Jarl:"Norse noble ruler, equivalent to earl or duke",Hersir:"Norse military leader and landowner",Lendmann:"Norwegian royal official and landowner",Stallare:"Swedish royal official and commander",Hirdmann:"Member of Norwegian royal household",Skutilsvein:"Norse royal servant and official"},"Elected Leaders":{President:"An elected head of state","Prime Minister":"The head of government, usually from the majority party",Chancellor:"A high-ranking government official or head of government",Consul:"Elected official in ancient or modern republics",Tribune:"Elected representative of the people",Senator:"Elected member of a senate",Representative:"Elected member of a legislative body",Governor:"Elected or appointed leader of a region",Mayor:"Elected leader of a city","Storting Representative":"Member of Norwegian parliament","Riksdag Member":"Member of Swedish parliament","Folketing Member":"Member of Danish parliament","Althing Member":"Member of Icelandic parliament","Eduskunta Member":"Member of Finnish parliament"},"Council & Assembly":{Council:"A group of people who rule together",Assembly:"A body of elected representatives",Parliament:"A legislative body that also governs",Senate:"An upper house of government",Congress:"A legislative body with governing powers",Diet:"Legislative assembly in some countries",Cortes:"Parliament in Spanish-speaking countries",Reichstag:"German parliament or legislative body",Duma:"Russian legislative assembly",Knesset:"Israeli parliament",Thing:"Ancient Norse assembly and court",Althing:"Icelandic parliament, oldest in the world",Storting:"Norwegian parliament",Riksdag:"Swedish parliament",Folketing:"Danish parliament",Eduskunta:"Finnish parliament",Lagting:"Norwegian upper house (1814-2009)",Odelsting:"Norwegian lower house (1814-2009)",Landsting:"Swedish upper house (1866-1970)","Andra Kammaren":"Swedish lower house (1866-1970)","Första Kammaren":"Swedish upper house (1866-1970)"},"Military Leaders":{General:"Military leader who rules",Admiral:"Naval leader who rules",Commander:"Military commander who rules",Warlord:"Military leader who controls territory",Captain:"Military or naval officer who rules",Colonel:"Military officer who rules",Marshal:"High-ranking military officer who rules",Strategos:"Ancient Greek military leader who rules",Shogun:"Japanese military dictator",Caesar:"Roman military and political leader",Hersir:"Norse military leader and landowner",Stallare:"Swedish royal official and commander",Hirdmann:"Member of Norwegian royal household",Skutilsvein:"Norse royal servant and official",Jarl:"Norse noble ruler and military leader","Viking Captain":"Norse sea captain and raider","Berserker Chief":"Norse warrior leader","Shield Maiden":"Norse female warrior leader",Valkyrie:"Norse female warrior and chooser of the slain",Einherjar:"Norse warrior chosen for Valhalla"},"Religious Leaders":{Pope:"Head of the Catholic Church who rules",Patriarch:"Eastern Orthodox Church leader who rules",Caliph:"Islamic religious and political leader",Sultan:"Islamic ruler with religious authority",Emir:"Islamic ruler or commander",Khan:"Central Asian ruler, often nomadic",Pharaoh:"Ancient Egyptian divine ruler","High Priest":"Religious leader who rules",Archbishop:"High-ranking church official who rules",Bishop:"Church official who rules",Imam:"Islamic religious leader who rules",Rabbi:"Jewish religious leader who rules",Lama:"Tibetan Buddhist leader who rules",Guru:"Spiritual teacher who rules",Gothi:"Norse pagan priest and chieftain",Völva:"Norse female seer and prophetess",Seiðkona:"Norse female practitioner of magic",Runemaster:"Norse master of runic magic","Thing Priest":"Norse priest who presides over assemblies","Temple Guardian":"Guardian of Norse temples and sacred sites"},"Special & Unique":{Dictator:"A single ruler with absolute power",Oligarch:"A member of a small ruling group",Technocrat:"A technical expert who rules",Meritocrat:"Someone chosen for their abilities",Aristocrat:"A noble or privileged person who rules",Bureaucrat:"A government official who rules",Scholar:"An academic who rules through knowledge",Merchant:"A wealthy trader who rules",Artisan:"A skilled craftsman who rules",Farmer:"A landowner who rules through agriculture",Hunter:"A skilled hunter who rules",Fisher:"A master of the seas who rules",Miner:"A resource controller who rules",Blacksmith:"A master craftsman who rules",Alchemist:"A master of transformation who rules",Astronomer:"A stargazer who rules through celestial knowledge",Historian:"A keeper of knowledge who rules",Philosopher:"A thinker who rules through wisdom",Prophet:"A seer who rules through divine insight",Champion:"A victorious warrior who rules",Hero:"A legendary figure who rules",Villain:"A dark figure who rules through fear",Outlaw:"A rebel who rules outside the law",Pirate:"A sea robber who rules the waves",Nomad:"A wanderer who rules through movement",Hermit:"A solitary figure who rules alone",Sage:"A wise elder who rules through knowledge",Mystic:"A spiritual seeker who rules",Shaman:"A spiritual healer who rules",Monk:"A religious ascetic who rules",Nun:"A religious woman who rules",Priest:"A religious man who rules",Priestess:"A religious woman who rules",Cultist:"A follower of a dark religion who rules",Heretic:"A religious rebel who rules",Zealot:"A religious fanatic who rules",Martyr:"A sacrificial figure who rules through death",Saint:"A holy figure who rules through divine favor",Skald:"Norse poet and storyteller who rules through words",Runemaster:"Norse master of runic magic and divination",Völva:"Norse female seer and prophetess",Gothi:"Norse pagan priest and chieftain",Seiðkona:"Norse female practitioner of magic",Berserker:"Norse warrior who fights in a trance-like state",Valkyrie:"Norse female warrior and chooser of the slain",Einherjar:"Norse warrior chosen for Valhalla",Dís:"Norse female spirit or goddess",Norn:"Norse fate goddess who weaves destiny",Vættir:"Norse nature spirits and guardians"}},J={"Monarchy Systems":{Monarchy:"Rule by a single monarch or royal family","Traditional Monarchy":"Monarch has complete power over the state","Constitutional Monarchy":"Monarch with limited powers, constitution-based","Limited Monarchy":"Monarch's power is restricted by laws or constitution","Elective Monarchy":"Monarch chosen by election rather than inheritance","Hereditary Monarchy":"Monarch position passed down through family","Dual Monarchy":"Two monarchs ruling together or over separate territories","Crowned Republic":"Monarchy in name but republic in practice","Grand Duchy":"Territory ruled by a grand duke or duchess",Principality:"Territory ruled by a prince or princess",Archduchy:"Territory ruled by an archduke or archduchess",Viceroyalty:"Territory ruled by a viceroy on behalf of a monarch","Imperial Monarchy":"Monarchy ruling over an empire","Holy Roman Empire":"Multi-ethnic empire with complex governance","Byzantine Empire":"Eastern Roman Empire with imperial structure","Ottoman Empire":"Islamic empire with sultanate system","Austro-Hungarian Empire":"Dual monarchy with complex federal structure","Kalmar Union":"Medieval union of Denmark, Norway, and Sweden","Swedish Empire":"Swedish imperial expansion in the Baltic","Danish Empire":"Danish imperial expansion in the North Sea","Norwegian Empire":"Norwegian imperial expansion in the Atlantic","Finnish Grand Duchy":"Finnish autonomy under Russian rule","Icelandic Commonwealth":"Medieval Icelandic republic and assembly"},"Democratic Systems":{Democracy:"Rule by the people through voting and participation","Direct Democracy":"Citizens vote directly on laws and policies","Athenian Democracy":"Classical Greek direct democracy","Swiss Democracy":"Modern direct democracy with referendums","Participatory Democracy":"Citizens actively participate in decision-making","Deliberative Democracy":"Decisions made through reasoned discussion","Consensus Democracy":"Decisions made by consensus","Liquid Democracy":"Delegable voting system","E-Democracy":"Electronic democracy using internet","Digital Democracy":"Democracy using digital technology","Virtual Democracy":"Democracy conducted in virtual spaces","Liberal Democracy":"Democracy with protection of individual rights","Social Democracy":"Democracy with social welfare programs","Constitutional Democracy":"Democracy limited by a constitution","Parliamentary Democracy":"Democracy with parliamentary system","Presidential Democracy":"Democracy with powerful president","Semi-Presidential Democracy":"Democracy with both president and prime minister","Majoritarian Democracy":"Majority rule democracy","Proportional Democracy":"Representation proportional to votes","Mixed Democracy":"Combination of different democratic systems","Workers Democracy":"Workers control the means of production","Market Democracy":"Democracy with free market economy","Green Democracy":"Democracy focused on environmental issues","Council Democracy":"Decisions made by elected councils","Industrial Democracy":"Democracy in workplace and industry","Economic Democracy":"Democratic control of economic decisions","Cultural Democracy":"Democracy in cultural and artistic matters","Scientific Democracy":"Democratic decision-making in science","Technological Democracy":"Democratic control of technology","Educational Democracy":"Democratic governance of education","Nordic Democracy":"Democratic system based on Nordic welfare model","Scandinavian Democracy":"Democratic system emphasizing social equality","Nordic Council Democracy":"Democratic cooperation between Nordic countries","Baltic Democracy":"Democratic system in Baltic Sea region","Arctic Democracy":"Democratic governance in Arctic regions"},"Republican Systems":{Republic:"Rule by elected officials and representatives","Classical Republic":"State without a monarch, ruled by elected officials","Roman Republic":"Ancient Roman republican system","Venetian Republic":"Maritime republic with complex governance","Florentine Republic":"Renaissance city-state republic","Dutch Republic":"Early modern federal republic","Swiss Confederation":"Federal republic with direct democracy","Icelandic Commonwealth":"Medieval republican system","Novgorod Republic":"Medieval Russian city republic","Pskov Republic":"Medieval Russian city republic","Carthaginian Republic":"Ancient Phoenician republic","Constitutional Republic":"A republic that follows rules in a constitution","Federal Republic":"A republic with many states that share power","Unitary Republic":"A republic with one central government","Parliamentary Republic":"A republic where a parliament makes decisions","Semi-Presidential Republic":"A republic with both a president and prime minister","Presidential Republic":"A republic where a president has a lot of power","People's Republic":"A republic that claims to represent the people","Islamic Republic":"Republic based on Islamic principles","Socialist Republic":"Republic with socialist economy","Democratic Republic":"Republic emphasizing democratic principles","Merchant Republic":"Republic controlled by rich merchants","Military Republic":"Republic with strong military influence","Corporate Republic":"Republic run like a big company","Technocratic Republic":"Republic ruled by technical experts","Academic Republic":"Republic with academic governance","Religious Republic":"Republic based on religious principles","Secular Republic":"Republic with separation of church and state","Multicultural Republic":"Republic embracing cultural diversity","Environmental Republic":"Republic focused on environmental protection","Digital Republic":"Republic using digital governance","Nordic Republic":"Republican system based on Nordic values","Scandinavian Republic":"Republican system emphasizing equality and welfare","Baltic Republic":"Republican system in Baltic Sea region","Arctic Republic":"Republican governance in Arctic regions","Nordic Union Republic":"Republican system uniting Nordic countries"},"Federal & Union Systems":{Federation:"Power shared between central and regional governments","Federal Monarchy":"Monarchy with federal structure","Federal Republic":"Republic with federal structure","Federal Democracy":"Democracy with federal structure","Asymmetric Federation":"Federation with unequal member states","Symmetric Federation":"Federation with equal member states",Federacy:"Asymmetric federal relationship","Associated State":"State in free association with another",Commonwealth:"Voluntary association of independent states",Confederation:"Loose alliance of independent states",Union:"Political union of multiple entities","Personal Union":"Two countries ruled by the same king or queen","Real Union":"Two countries that share some government institutions","Political Union":"Countries that work together politically","Economic Union":"Countries that work together economically","Monetary Union":"Countries that use the same money","Customs Union":"Countries that have the same trade rules",Alliance:"Countries that agree to help each other","Defensive Alliance":"Countries that agree to defend each other","Offensive Alliance":"Countries that agree to attack together","Nordic Union":"Union of Nordic countries with shared governance","Scandinavian Union":"Union of Scandinavian countries","Baltic Union":"Union of Baltic Sea countries","Arctic Union":"Union of Arctic region countries","Kalmar Union":"Historical union of Denmark, Norway, and Sweden","Nordic Council":"Cooperation organization of Nordic countries","Baltic Assembly":"Cooperation organization of Baltic countries","Arctic Council":"Cooperation organization of Arctic countries"},"Regional & Special Systems":{"City-State":"Independent city with its own government","Regional State":"State with areas that have some independence","Autonomous Region":"Area that can make some of its own decisions","Special Administrative Region":"Area with special rules and independence","Free City":"City that has special independence",Microstate:"Very small independent state",Enclave:"Territory completely surrounded by another state",Exclave:"Territory separated from main state",Condominium:"Territory jointly ruled by multiple states",Protectorate:"State protected by another state","Nordic City-State":"Independent Nordic city with its own government","Scandinavian City-State":"Independent Scandinavian city with its own government","Baltic City-State":"Independent Baltic city with its own government","Arctic City-State":"Independent Arctic city with its own government","Nordic Microstate":"Very small independent Nordic state","Scandinavian Microstate":"Very small independent Scandinavian state","Baltic Microstate":"Very small independent Baltic state","Arctic Microstate":"Very small independent Arctic state"},"Military & Security Systems":{Military:"Government controlled by military institutions","Military Junta":"A group of military leaders rules the country","Military Dictatorship":"One military leader has all the power",Stratocracy:"The military class controls the government","Martial Law":"The military temporarily takes control during emergencies","Military Occupation":"The military controls a territory","Warlord State":"Military leaders control different parts of the country","Praetorian State":"The military controls politics","Garrison State":"The country is organized around military defense","Barracks State":"The military has a lot of influence everywhere","Security State":"The government focuses on security and watching people","Nordic Defense Union":"Military alliance of Nordic countries","Scandinavian Defense Union":"Military alliance of Scandinavian countries","Baltic Defense Union":"Military alliance of Baltic countries","Arctic Defense Union":"Military alliance of Arctic countries","Nordic Security Council":"Security cooperation of Nordic countries","Scandinavian Security Council":"Security cooperation of Scandinavian countries","Baltic Security Council":"Security cooperation of Baltic countries","Arctic Security Council":"Security cooperation of Arctic countries"},"Authoritarian Systems":{Dictatorship:"Rule by a single leader with absolute power",Autocracy:"Rule by a single person with unlimited power",Despotism:"Rule by a despot with absolute power",Tyranny:"Rule by a tyrant with oppressive power",Caesarism:"A dictator who has popular support",Bonapartism:"Authoritarian rule that comes from a revolution","Personal Rule":"Rule based on one person's authority","Cult of Personality":"Rule based on people worshipping the leader","Supreme Leadership":"Rule by a supreme leader",Oligarchy:"Rule by a small group of powerful people",Plutocracy:"Rule by the wealthy",Timocracy:"Rule by property owners",Gerontocracy:"Rule by the elderly",Kleptocracy:"Rule by corrupt leaders",Nepotocracy:"Family members rule the country",Bureaucracy:"Government officials rule the country",Meritocracy:"People with the best skills rule the country",Technocracy:"Technical experts rule the country","Nordic Oligarchy":"Small group of Nordic elites rule the country","Scandinavian Oligarchy":"Small group of Scandinavian elites rule the country","Baltic Oligarchy":"Small group of Baltic elites rule the country","Arctic Oligarchy":"Small group of Arctic elites rule the country","Nordic Meritocracy":"Nordic people with best skills rule the country","Scandinavian Meritocracy":"Scandinavian people with best skills rule the country","Baltic Meritocracy":"Baltic people with best skills rule the country","Arctic Meritocracy":"Arctic people with best skills rule the country"},"Alternative & Minimal Systems":{Anarchy:"No government or authority at all",Minarchism:"Very small government that only provides basic services","Libertarian State":"State with maximum individual freedom","Night Watchman State":"State that only provides basic security","Voluntary Society":"Society based on people choosing to work together","Stateless Society":"Society without a formal state","Self-Governing":"Society that governs itself without a state",Decentralized:"Society with power spread out instead of centralized",Autonomous:"Self-governing with minimal external control","Caste System":"Society organized by hereditary social classes",Tribal:"Government based on tribal structures and customs","Tribal Confederation":"A group of tribes working together",Feudal:"Hierarchical system based on land ownership","Feudal System":"A system where landowners control resources and people work for them",Corporate:"Government run like a business corporation",Guild:"Government organized around professional associations","Guild System":"A society organized by professional groups",Commune:"Government based on community cooperation","Monastic State":"A state ruled by a religious order","Utopian State":"A state based on an ideal social model","Thing System":"Ancient Norse assembly-based governance","Althing System":"Icelandic assembly-based governance","Storting System":"Norwegian parliamentary governance","Riksdag System":"Swedish parliamentary governance","Folketing System":"Danish parliamentary governance","Eduskunta System":"Finnish parliamentary governance","Nordic Tribal Confederation":"Confederation of Nordic tribes","Scandinavian Tribal Confederation":"Confederation of Scandinavian tribes","Baltic Tribal Confederation":"Confederation of Baltic tribes","Arctic Tribal Confederation":"Confederation of Arctic tribes","Nordic Guild System":"Nordic society organized by professional groups","Scandinavian Guild System":"Scandinavian society organized by professional groups","Baltic Guild System":"Baltic society organized by professional groups","Arctic Guild System":"Arctic society organized by professional groups"}},ua={Capitalist:"People own businesses and trade freely to make money",Socialist:"The government helps share resources and wealth fairly","Mixed Economy":"Combines both private business and government help",Communist:"The government owns everything and shares it equally",Mercantilist:"Focuses on trade and building up money through exports",Feudal:"Landowners control resources and people work for them",Tribal:"Resources are shared within family and tribal groups",Agrarian:"Mostly farming and agriculture-based economy",Industrial:"Focuses on making things in factories","Service-Based":"Mostly provides services like shops and offices","Resource-Based":"Makes money from natural resources like oil or minerals","Tourism-Based":"Makes money from visitors and travelers","Fishing-Based":"Makes money from fishing and sea resources","Mining-Based":"Makes money from digging up valuable minerals","Forestry-Based":"Makes money from cutting down trees and wood products","Nordic Welfare":"Nordic model with high taxes and social services","Scandinavian Welfare":"Scandinavian model with comprehensive social safety net","Baltic Trade":"Makes money from Baltic Sea trade and shipping","Arctic Resources":"Makes money from Arctic natural resources","Nordic Fishing":"Makes money from Nordic fishing and seafood","Scandinavian Mining":"Makes money from Scandinavian mineral resources","Baltic Tourism":"Makes money from Baltic Sea tourism","Arctic Tourism":"Makes money from Arctic tourism and expeditions"},ha=({nation:a,onNationUpdated:n})=>{const[i,d]=c.useState(!1),[l,u]=c.useState(!1),{profile:o}=ge(),[b,_]=c.useState([]),[S,w]=c.useState(""),[T,N]=c.useState("");c.useEffect(()=>{if(a.ruling_entity){for(const[s,t]of Object.entries(Y))if(Object.keys(t).includes(a.ruling_entity)){w(s);break}}if(a.government_system){for(const[s,t]of Object.entries(J))if(Object.keys(t).includes(a.government_system)){N(s);break}}},[a.ruling_entity,a.government_system]);const[r,m]=c.useState({rulingEntity:a.ruling_entity||"Monarch",governmentSystem:a.government_system||"Monarchy",economicSystem:a.economic_system||"Capitalist",vassalOf:a.vassal_of||"independent",subordinateType:"vassal",lore:a.lore||"",themeColor:a.theme_color||"#3b82f6",bannerUrl:a.banner_image_url||"",bannerColor:a.color||"#1e40af",bannerText:a.banner_text||"",bannerTextColor:a.banner_text_color||"#ffffff",bannerTextSize:a.banner_text_size||16});c.useEffect(()=>{console.log("Form data updated:",r)},[r]);const{toast:C}=na();c.useEffect(()=>{i&&(console.log("EditNationModal opened for nation:",a),console.log("Current user profile:",o),console.log("Nation leader_name:",a.leader_name),console.log("User full_name:",o==null?void 0:o.full_name),console.log("User role:",o==null?void 0:o.role),console.log("Can user edit this nation?",(o==null?void 0:o.role)==="admin"||(o==null?void 0:o.role)==="moderator"||(o==null?void 0:o.full_name)===a.leader_name))},[i,a,o]),c.useEffect(()=>{i&&(async()=>{try{const{data:t,error:x}=await M.from("nations").select("name").order("name");if(x){console.error("Error fetching nations:",x);return}if(t){const D=t.map(v=>v.name).filter(v=>v!==a.name);_(D)}}catch(t){console.error("Error fetching nations:",t)}})()},[i,a.name]);const F=async s=>{s.preventDefault(),u(!0);try{console.log("Testing database connection...");const{data:t,error:x}=await M.from("nations").select("count").limit(1);if(x){console.error("Database connection failed:",x),C({title:"Database Connection Error",description:`Cannot connect to database: ${x.message}`,variant:"destructive"}),u(!1);return}console.log("Database connection successful");const D=(o==null?void 0:o.role)==="admin"||(o==null?void 0:o.role)==="moderator"||(o==null?void 0:o.full_name)===a.leader_name;if(!D){C({title:"Permission Denied",description:"You do not have permission to edit this nation. Only nation leaders and staff can edit nation information.",variant:"destructive"}),u(!1);return}if(!o){C({title:"Authentication Error",description:"You must be logged in to edit nation information.",variant:"destructive"}),u(!1);return}if(console.log("User authentication check passed:",{userId:o.id,userRole:o.role,userFullName:o.full_name,nationLeaderName:a.leader_name,canEdit:D}),console.log("Submitting form data:",{ruling_entity:r.rulingEntity,government_system:r.governmentSystem,economic_system:r.economicSystem,vassal_of:r.vassalOf==="independent"?null:r.vassalOf,lore:r.lore,theme_color:r.themeColor,color:r.bannerColor}),console.log("Attempting to update nation:",a.name),console.log("Update data:",{ruling_entity:r.rulingEntity,government_system:r.governmentSystem,economic_system:r.economicSystem,vassal_of:r.vassalOf==="independent"?null:r.vassalOf,lore:r.lore,theme_color:r.themeColor,updated_at:new Date().toISOString()}),!r.rulingEntity||!r.governmentSystem||!r.economicSystem){console.error("Missing required fields:",{rulingEntity:r.rulingEntity,governmentSystem:r.governmentSystem,economicSystem:r.economicSystem}),C({title:"Validation Error",description:"Please select all required fields (Ruling Entity, Government System, Economic System).",variant:"destructive"}),u(!1);return}const v={lore:r.lore,color:r.bannerColor,theme_color:r.themeColor,economic_system:r.economicSystem,vassal_of:r.vassalOf==="independent"?null:r.vassalOf,ruling_entity:r.rulingEntity,government_system:r.governmentSystem,banner_image_url:r.bannerUrl||null,banner_style:"solid",banner_pattern:"none",banner_gradient:"none",banner_gradient_colors:[],banner_opacity:1,banner_height:128,banner_text:r.bannerText||null,banner_text_color:r.bannerTextColor||"#ffffff",banner_text_size:r.bannerTextSize||16,banner_text_position:"center",banner_text_style:"normal",last_updated:new Date().toISOString()};console.log("Final update data being sent to database:",v),console.log("Form data values:",{rulingEntity:r.rulingEntity,governmentSystem:r.governmentSystem,economicSystem:r.economicSystem,themeColor:r.themeColor}),console.log("Theme color being sent:",r.themeColor),console.log("Original nation theme color:",a.theme_color),console.log("Nation ID being used for update:",a.id),console.log("Parsed nation ID:",parseInt(a.id)),console.log("About to execute database update...");try{const{data:p,error:L}=await M.from("nations").select("id, name, ruling_entity, government_system, economic_system, theme_color, color, lore").eq("id",parseInt(a.id)).single();if(console.log("Test query result:",{testData:p,testError:L}),L){console.error("Test query failed:",L),C({title:"Database Error",description:`Failed to verify database fields: ${L.message}`,variant:"destructive"}),u(!1);return}if(!p){console.error("Nation not found in database"),C({title:"Database Error",description:"Nation not found in database",variant:"destructive"}),u(!1);return}console.log("Current database values:",p),console.log("Fields being updated:",{ruling_entity:r.rulingEntity,government_system:r.governmentSystem,economic_system:r.economicSystem,theme_color:r.themeColor,lore:r.lore,color:r.bannerColor}),console.log("Field existence check:",{has_ruling_entity:"ruling_entity"in p,has_government_system:"government_system"in p,has_economic_system:"economic_system"in p,has_theme_color:"theme_color"in p,has_lore:"lore"in p})}catch(p){console.error("Error during test query:",p),C({title:"Database Error",description:`Error during database test: ${p}`,variant:"destructive"}),u(!1);return}const{data:P,error:h}=await M.from("nations").update(v).eq("id",parseInt(a.id)).select();if(console.log("Supabase response:",{data:P,error:h}),console.log("Update query details:",{table:"nations",id:parseInt(a.id),updateData:v}),h)throw console.error("Supabase error:",h),h;if(P&&P.length>0){console.log("Database returned updated nation:",P[0]);const p=P[0];console.log("Updated fields in database:",{ruling_entity:p.ruling_entity,government_system:p.government_system,economic_system:p.economic_system,theme_color:p.theme_color,lore:p.lore,color:p.color}),console.log("Update verification:",{ruling_entity_changed:p.ruling_entity===r.rulingEntity,government_system_changed:p.government_system===r.governmentSystem,economic_system_changed:p.economic_system===r.economicSystem,theme_color_changed:p.theme_color===r.themeColor,lore_changed:p.lore===r.lore,color_changed:p.color===r.bannerColor})}else console.error("No data returned from update query");const g={...a,lore:r.lore,color:r.bannerColor,theme_color:r.themeColor,economic_system:r.economicSystem,vassal_of:r.vassalOf==="independent"?null:r.vassalOf,ruling_entity:r.rulingEntity,government_system:r.governmentSystem,banner_image_url:r.bannerUrl||null,banner_text:r.bannerText||null,banner_text_color:r.bannerTextColor||"#ffffff",banner_text_size:r.bannerTextSize||16};if(console.log("Updated nation object:",g),console.log("Theme color in updated nation:",g.theme_color),n(g),console.log("Update successful, keeping modal open to show changes"),Object.assign(a,g),m({rulingEntity:g.ruling_entity||"Monarch",governmentSystem:g.government_system||"Monarchy",economicSystem:g.economic_system||"Capitalist",vassalOf:g.vassal_of||"independent",subordinateType:"vassal",lore:g.lore||"",themeColor:g.theme_color||"#3b82f6",bannerUrl:g.banner_image_url||"",bannerColor:g.color||"#1e40af",bannerText:g.banner_text||"",bannerTextColor:g.banner_text_color||"#ffffff",bannerTextSize:g.banner_text_size||16}),g.ruling_entity){for(const[p,L]of Object.entries(Y))if(Object.keys(L).includes(g.ruling_entity)){w(p);break}}if(g.government_system){for(const[p,L]of Object.entries(J))if(Object.keys(L).includes(g.government_system)){N(p);break}}C({title:"Success!",description:"Your changes have been saved. The nation information has been updated successfully."})}catch(t){console.error("Error updating nation:",t),C({title:"Error",description:"Failed to update nation information. Please try again.",variant:"destructive"})}finally{u(!1)}},R=s=>{d(s),s||m({rulingEntity:a.ruling_entity||"Monarch",governmentSystem:a.government_system||"Monarchy",economicSystem:a.economic_system||"Capitalist",vassalOf:a.vassal_of||"independent",subordinateType:"vassal",lore:a.lore||"",themeColor:a.theme_color||"#3b82f6",bannerUrl:a.banner_image_url||"",bannerColor:a.color||"#1e40af",bannerText:a.banner_text||"",bannerTextColor:a.banner_text_color||"#ffffff",bannerTextSize:a.banner_text_size||16})};return e.jsxs(K,{open:i,onOpenChange:R,children:[e.jsx(We,{asChild:!0,children:e.jsxs(j,{variant:"outline",size:"sm",className:"flex items-center gap-2",children:[e.jsx(Ce,{className:"w-4 h-4"}),"Edit Nation"]})}),e.jsxs(X,{className:"max-w-2xl max-h-[90vh] overflow-y-auto",children:[e.jsxs(Z,{children:[e.jsxs(Q,{className:"flex items-center gap-2",children:[e.jsx(Ce,{className:"w-5 h-5"}),"Edit ",a.name]}),e.jsx(me,{children:"Modify your nation's economic system, vassal status, and lore. The description is automatically set by the game and cannot be edited."})]}),e.jsxs("form",{onSubmit:F,className:"space-y-6",children:[e.jsxs("div",{className:"flex items-start gap-3 p-4 bg-blue-50 dark:bg-blue-950/20 border border-blue-200 dark:border-blue-800 rounded-lg",children:[e.jsx(H,{className:"w-5 h-5 text-blue-600 dark:text-blue-400 mt-0.5 flex-shrink-0"}),e.jsxs("div",{className:"text-sm text-blue-800 dark:text-blue-200",children:[e.jsx("p",{className:"font-medium mb-1",children:"Note:"}),e.jsx("p",{children:"The nation description is automatically set by the game and cannot be edited. You can only modify the economic system, vassal status, and lore."}),e.jsxs("p",{className:"mt-2 text-orange-600 dark:text-orange-400",children:[e.jsx("strong",{children:"Required Fields:"})," Ruling Entity, Government System, and Economic System must be selected."]})]})]}),e.jsxs("div",{className:"space-y-2",children:[e.jsx(k,{htmlFor:"rulingEntity",children:"Ruling Entity *"}),e.jsxs(O,{value:S,onValueChange:s=>{w(s),m(t=>({...t,rulingEntity:""}))},children:[e.jsx(B,{children:e.jsx(z,{placeholder:"Select ruling entity category"})}),e.jsx(G,{children:Object.keys(Y).map(s=>e.jsx(y,{value:s,children:s},s))})]}),S&&e.jsxs(O,{value:r.rulingEntity,onValueChange:s=>m(t=>({...t,rulingEntity:s})),children:[e.jsx(B,{children:e.jsx(z,{placeholder:"Select specific ruling entity"})}),e.jsx(G,{children:Object.entries(Y[S]).map(([s,t])=>e.jsx(y,{value:s,children:e.jsxs("div",{className:"flex items-center justify-between w-full",children:[e.jsx("span",{children:s}),e.jsx(oe,{children:e.jsxs(ie,{children:[e.jsx(le,{asChild:!0,children:e.jsx("span",{tabIndex:-1,className:"focus:outline-none ml-2",children:e.jsx(H,{className:"w-3 h-3 text-muted-foreground cursor-help"})})}),e.jsx(ce,{side:"right",align:"start",className:"max-w-xs",children:e.jsx("p",{className:"text-sm",children:t})})]})})]})},s))})]}),e.jsxs("p",{className:"text-sm text-muted-foreground",children:["Current: ",a.ruling_entity||"Not set"]})]}),e.jsxs("div",{className:"space-y-2",children:[e.jsx(k,{htmlFor:"governmentSystem",children:"Government System *"}),e.jsxs(O,{value:T,onValueChange:s=>{N(s),m(t=>({...t,governmentSystem:""}))},children:[e.jsx(B,{children:e.jsx(z,{placeholder:"Select government system category"})}),e.jsx(G,{children:Object.keys(J).map(s=>e.jsx(y,{value:s,children:s},s))})]}),T&&e.jsxs(O,{value:r.governmentSystem,onValueChange:s=>m(t=>({...t,governmentSystem:s})),children:[e.jsx(B,{children:e.jsx(z,{placeholder:"Select specific government system"})}),e.jsx(G,{children:Object.entries(J[T]).map(([s,t])=>e.jsx(y,{value:s,children:e.jsxs("div",{className:"flex items-center justify-between w-full",children:[e.jsx("span",{children:s}),e.jsx(oe,{children:e.jsxs(ie,{children:[e.jsx(le,{asChild:!0,children:e.jsx("span",{tabIndex:-1,className:"focus:outline-none ml-2",children:e.jsx(H,{className:"w-3 h-3 text-muted-foreground cursor-help"})})}),e.jsx(ce,{side:"right",align:"start",className:"max-w-xs",children:e.jsx("p",{className:"text-sm",children:t})})]})})]})},s))})]}),e.jsxs("p",{className:"text-sm text-muted-foreground",children:["Current: ",a.government_system||"Not set"]})]}),e.jsxs("div",{className:"space-y-2",children:[e.jsx(k,{htmlFor:"economicSystem",children:"Economic System *"}),e.jsxs(O,{value:r.economicSystem,onValueChange:s=>m(t=>({...t,economicSystem:s})),children:[e.jsx(B,{children:e.jsx(z,{placeholder:"Select economic system"})}),e.jsx(G,{children:Object.entries(ua).map(([s,t])=>e.jsx(y,{value:s,children:e.jsxs("div",{className:"flex items-center justify-between w-full",children:[e.jsx("span",{children:s}),e.jsx(oe,{children:e.jsxs(ie,{children:[e.jsx(le,{asChild:!0,children:e.jsx("span",{tabIndex:-1,className:"focus:outline-none ml-2",children:e.jsx(H,{className:"w-3 h-3 text-muted-foreground cursor-help"})})}),e.jsx(ce,{side:"right",align:"start",className:"max-w-xs",children:e.jsx("p",{className:"text-sm",children:t})})]})})]})},s))})]}),e.jsxs("p",{className:"text-sm text-muted-foreground",children:["Current: ",a.economic_system||"Not set"]})]}),e.jsxs("div",{className:"space-y-2",children:[e.jsx(k,{htmlFor:"themeColor",children:"Theme Color"}),e.jsxs("div",{className:"flex items-center gap-3",children:[e.jsx(I,{id:"themeColor",type:"color",value:r.themeColor,onChange:s=>m(t=>({...t,themeColor:s.target.value})),className:"w-16 h-12 p-1 border-2 border-border rounded-lg cursor-pointer",title:"Click to open color picker"}),e.jsxs("div",{className:"flex-1",children:[e.jsx(I,{type:"text",value:r.themeColor,onChange:s=>m(t=>({...t,themeColor:s.target.value})),placeholder:"#3b82f6",className:"font-mono text-sm"}),e.jsx("p",{className:"text-xs text-muted-foreground mt-1",children:"Choose any color from the full spectrum. This will be used for crown icons and decorative elements."})]})]}),e.jsxs("div",{className:"flex items-center gap-3 p-3 bg-muted/30 rounded-lg",children:[e.jsxs("div",{className:"flex items-center gap-2",children:[e.jsx("div",{className:"w-6 h-6 rounded-full border-2 border-border",style:{backgroundColor:r.themeColor}}),e.jsx("span",{className:"text-sm font-medium",children:"Crown Icon Preview:"})]}),e.jsxs("div",{className:"flex items-center gap-2",children:[e.jsx("div",{className:"w-6 h-6 rounded-full border-2 border-border flex items-center justify-center",style:{backgroundColor:r.themeColor},children:e.jsx("span",{className:"text-white text-xs",children:"👑"})}),e.jsx("span",{className:"text-sm text-muted-foreground",children:"This is how your crown will look"})]})]}),e.jsxs("p",{className:"text-sm text-muted-foreground",children:["Current theme color: ",e.jsx("span",{className:"font-mono",children:a.theme_color||"Not set"})]})]}),e.jsxs("div",{className:"space-y-4",children:[e.jsx(k,{htmlFor:"bannerColor",children:"Banner Color"}),e.jsxs("div",{className:"flex items-center gap-3",children:[e.jsx(I,{id:"bannerColor",type:"color",value:r.bannerColor,onChange:s=>m(t=>({...t,bannerColor:s.target.value})),className:"w-16 h-12 p-1 border-2 border-border rounded-lg cursor-pointer",title:"Click to open color picker"}),e.jsxs("div",{className:"flex-1",children:[e.jsx(I,{type:"text",value:r.bannerColor,onChange:s=>m(t=>({...t,bannerColor:s.target.value})),placeholder:"#1e40af",className:"font-mono text-sm"}),e.jsx("p",{className:"text-xs text-muted-foreground mt-1",children:"Choose any color from the full spectrum. This will be used as the background color for the banner area."})]})]}),e.jsxs("p",{className:"text-sm text-muted-foreground",children:["Current banner color: ",e.jsx("span",{className:"font-mono",children:a.color||"Not set"})]}),e.jsxs("div",{className:"p-3 bg-muted/30 rounded-lg",children:[e.jsxs("div",{className:"flex items-center gap-2 mb-2",children:[e.jsx("div",{className:"w-4 h-4 rounded border border-border",style:{backgroundColor:r.bannerColor}}),e.jsx("span",{className:"text-sm font-medium",children:"Banner Preview:"})]}),e.jsx("div",{className:"w-full h-16 rounded-lg border-2 border-border flex items-center justify-center text-white font-medium",style:{backgroundColor:r.bannerColor},children:r.bannerText||"Your Nation Banner"}),e.jsx("p",{className:"text-xs text-muted-foreground mt-2",children:"This shows how your banner will look with the selected color"})]})]}),e.jsxs("div",{className:"space-y-2",children:[e.jsx(k,{htmlFor:"bannerUrl",children:"Banner Image URL (Optional)"}),e.jsx(I,{id:"bannerUrl",type:"url",placeholder:"https://example.com/banner.jpg",value:r.bannerUrl,onChange:s=>m(t=>({...t,bannerUrl:s.target.value}))}),e.jsx("p",{className:"text-sm text-muted-foreground",children:"Provide a URL to a banner image for your nation. This will be displayed above the nation information on your nation card."}),r.bannerUrl&&e.jsxs("div",{className:"mt-3 p-3 border rounded-lg bg-muted",children:[e.jsx(k,{className:"text-sm font-medium mb-2 block",children:"Banner Preview:"}),e.jsx("div",{className:"w-full h-20 rounded-lg flex items-center justify-center text-white font-medium text-sm",style:{backgroundColor:r.bannerColor,backgroundImage:`url(${r.bannerUrl})`,backgroundSize:"cover",backgroundPosition:"center"},children:!r.bannerUrl.match(/\.(jpg|jpeg|png|gif|webp)$/i)&&e.jsx("span",{className:"text-center",children:"Invalid image URL"})})]})]}),e.jsxs("div",{className:"space-y-4",children:[e.jsx(k,{htmlFor:"bannerText",children:"Banner Text (Optional)"}),e.jsx(I,{id:"bannerText",type:"text",placeholder:"Enter text to display on your banner",value:r.bannerText,onChange:s=>m(t=>({...t,bannerText:s.target.value}))}),e.jsx("p",{className:"text-sm text-muted-foreground",children:"Add custom text to display on your nation banner. This will appear overlaid on the banner image or color."}),e.jsxs("div",{className:"space-y-2",children:[e.jsx(k,{htmlFor:"bannerTextColor",children:"Banner Text Color"}),e.jsxs("div",{className:"flex items-center gap-3",children:[e.jsx(I,{id:"bannerTextColor",type:"color",value:r.bannerTextColor,onChange:s=>m(t=>({...t,bannerTextColor:s.target.value})),className:"w-16 h-12 p-1 border-2 border-border rounded-lg cursor-pointer",title:"Click to open color picker"}),e.jsxs("div",{className:"flex-1",children:[e.jsx(I,{type:"text",value:r.bannerTextColor,onChange:s=>m(t=>({...t,bannerTextColor:s.target.value})),placeholder:"#ffffff",className:"font-mono text-sm"}),e.jsx("p",{className:"text-xs text-muted-foreground mt-1",children:"Choose any color for your banner text. Make sure it contrasts well with your banner color."})]})]}),e.jsxs("div",{className:"p-3 bg-muted/30 rounded-lg",children:[e.jsxs("div",{className:"flex items-center gap-2 mb-2",children:[e.jsx("div",{className:"w-4 h-4 rounded border border-border",style:{backgroundColor:r.bannerTextColor}}),e.jsx("span",{className:"text-sm font-medium",children:"Text Preview:"})]}),e.jsx("div",{className:"w-full h-12 rounded-lg border-2 border-border flex items-center justify-center font-medium",style:{backgroundColor:r.bannerColor,color:r.bannerTextColor},children:r.bannerText||"Sample Text"}),e.jsx("p",{className:"text-xs text-muted-foreground mt-2",children:"This shows how your text will look on the banner"})]})]}),e.jsxs("div",{className:"space-y-2",children:[e.jsx(k,{htmlFor:"bannerTextSize",children:"Banner Text Size"}),e.jsxs(O,{value:r.bannerTextSize.toString(),onValueChange:s=>m(t=>({...t,bannerTextSize:parseInt(s)})),children:[e.jsx(B,{children:e.jsx(z,{placeholder:"Select text size"})}),e.jsxs(G,{children:[e.jsx(y,{value:"12",children:"Small (12px)"}),e.jsx(y,{value:"14",children:"Medium (14px)"}),e.jsx(y,{value:"16",children:"Large (16px)"}),e.jsx(y,{value:"18",children:"Extra Large (18px)"}),e.jsx(y,{value:"20",children:"Huge (20px)"}),e.jsx(y,{value:"24",children:"Giant (24px)"})]})]})]})]}),e.jsxs("div",{className:"space-y-4 p-4 bg-muted/50 rounded-lg",children:[e.jsx("h3",{className:"font-medium text-sm",children:"Current Nation Settings"}),e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm",children:[e.jsxs("div",{children:[e.jsx("span",{className:"font-medium text-muted-foreground",children:"Ruling Entity:"}),e.jsx("span",{className:"ml-2 text-foreground",children:a.ruling_entity||"Not set"})]}),e.jsxs("div",{children:[e.jsx("span",{className:"font-medium text-muted-foreground",children:"Government System:"}),e.jsx("span",{className:"ml-2 text-foreground",children:a.government_system||"Not set"})]}),e.jsxs("div",{children:[e.jsx("span",{className:"font-medium text-muted-foreground",children:"Economic System:"}),e.jsx("span",{className:"ml-2 text-foreground",children:a.economic_system||"Not set"})]}),e.jsxs("div",{children:[e.jsx("span",{className:"font-medium text-muted-foreground",children:"Vassal Status:"}),e.jsx("span",{className:"ml-2 text-foreground",children:a.vassal_of?`Vassal of ${a.vassal_of}`:"Independent"})]}),e.jsxs("div",{children:[e.jsx("span",{className:"font-medium text-muted-foreground",children:"Theme Color:"}),e.jsx("span",{className:"ml-2 text-foreground",children:a.theme_color||"Not set"})]}),e.jsxs("div",{children:[e.jsx("span",{className:"font-medium text-muted-foreground",children:"Banner Color:"}),e.jsx("span",{className:"ml-2 text-foreground",children:a.color||"Not set"})]}),e.jsxs("div",{children:[e.jsx("span",{className:"font-medium text-muted-foreground",children:"Nation Emblem:"}),e.jsx("span",{className:"ml-2 text-foreground",children:a.image_url?"Set":"Not set"})]}),e.jsxs("div",{children:[e.jsx("span",{className:"font-medium text-muted-foreground",children:"Banner Image:"}),e.jsx("span",{className:"ml-2 text-foreground",children:a.banner_image_url?"Set":"Not set"})]})]})]}),e.jsxs("div",{className:"space-y-2",children:[e.jsx(k,{htmlFor:"vassalOf",children:"Subordinate Status"}),e.jsxs(O,{value:r.vassalOf,onValueChange:s=>m(t=>({...t,vassalOf:s})),children:[e.jsx(B,{children:e.jsx(z,{placeholder:"Select if this nation is subordinate to another"})}),e.jsxs(G,{children:[e.jsx(y,{value:"independent",children:"Independent Nation (Not subordinate)"}),b.map(s=>e.jsxs(y,{value:s,children:["Subordinate to ",s]},s))]})]}),r.vassalOf!=="independent"&&e.jsxs("div",{className:"space-y-2",children:[e.jsx(k,{htmlFor:"subordinateType",children:"Subordinate Type"}),e.jsxs(O,{value:r.subordinateType,onValueChange:s=>m(t=>({...t,subordinateType:s})),children:[e.jsx(B,{children:e.jsx(z,{placeholder:"Select subordinate type"})}),e.jsxs(G,{children:[e.jsx(y,{value:"vassal",children:"Vassal - Semi-independent under protection"}),e.jsx(y,{value:"puppet",children:"Puppet - Controlled by superior nation"}),e.jsx(y,{value:"protectorate",children:"Protectorate - Protected by superior nation"}),e.jsx(y,{value:"union",children:"Union - Part of a larger political union"}),e.jsx(y,{value:"confederation",children:"Confederation - Loose alliance with superior"}),e.jsx(y,{value:"tributary",children:"Tributary - Pays tribute to superior nation"}),e.jsx(y,{value:"satellite",children:"Satellite - Politically dependent on superior"}),e.jsx(y,{value:"client",children:"Client State - Economically dependent on superior"}),e.jsx(y,{value:"march",children:"March - Border territory under protection"}),e.jsx(y,{value:"fief",children:"Fief - Territory granted by superior nation"})]})]}),e.jsxs("p",{className:"text-sm text-muted-foreground",children:["Define the nature of your subordinate relationship with ",r.vassalOf,"."]})]}),e.jsx("p",{className:"text-sm text-muted-foreground",children:"A subordinate nation is under the influence or control of a larger nation, while maintaining some independence."})]}),e.jsxs("div",{className:"space-y-2",children:[e.jsx(k,{htmlFor:"lore",children:"Lore"}),e.jsx(Ye,{id:"lore",value:r.lore,onChange:s=>m(t=>({...t,lore:s.target.value})),placeholder:"The story and history of your nation...",rows:6}),e.jsx("p",{className:"text-sm text-muted-foreground",children:"Share the rich history, traditions, and stories that make your nation unique."})]}),e.jsxs("div",{className:"flex justify-end gap-3 pt-4",children:[e.jsx(j,{type:"button",variant:"outline",onClick:()=>d(!1),disabled:l,children:"Close"}),e.jsx(j,{type:"submit",disabled:l,children:l?e.jsxs(e.Fragment,{children:[e.jsx(ae,{className:"w-4 h-4 mr-2 animate-spin"}),"Saving..."]}):e.jsxs(e.Fragment,{children:[e.jsx(oa,{className:"w-4 h-4 mr-2"}),"Save Changes"]})})]})]})]})]})},pa=({nation:a,isExpanded:n,onToggleExpand:i,onViewTown:d,onNationUpdated:l,loading:u})=>{var R,s;const[o,b]=c.useState(!1);c.useState(!1),c.useState(!1);const[_,S]=c.useState(0),[w,T]=c.useState(a.theme_color||"#eab308"),{profile:N}=ge();c.useEffect(()=>{T(a.theme_color||"#eab308"),console.log("NationCard: Nation data updated:",{name:a.name,theme_color:a.theme_color,ruling_entity:a.ruling_entity,government_system:a.government_system,economic_system:a.economic_system,lore:a.lore})},[a.theme_color,a.ruling_entity,a.government_system,a.economic_system,a.lore,_]);const{imageUrl:r,isLoading:m,error:C}=ma(a.name,a.image_url);if(u)return e.jsxs(xe,{className:"rounded-2xl shadow-lg border border-border overflow-hidden bg-card",children:[e.jsx($,{className:"h-32 w-full rounded-t-2xl mb-4"}),e.jsxs(ye,{className:"pb-0 pt-8 pl-32 relative",children:[e.jsx($,{className:"h-8 w-1/2 mb-2"}),e.jsx($,{className:"h-4 w-1/3 mb-2"}),e.jsx($,{className:"h-4 w-1/4 mb-2"})]}),e.jsxs(be,{className:"pt-4 pb-2",children:[e.jsx($,{className:"h-4 w-full mb-2"}),e.jsx($,{className:"h-4 w-2/3 mb-2"}),e.jsx($,{className:"h-4 w-1/2 mb-2"})]})]});const F=a.color?a.color.replace("text-","border-"):"border-primary";return e.jsxs(xe,{className:`rounded-2xl shadow-lg border-2 ${F} overflow-hidden group hover:shadow-xl transition-all duration-300 bg-card`,children:[e.jsxs("div",{className:"relative h-32 w-full flex items-center justify-center overflow-hidden",style:{backgroundColor:a.color||"#1e40af",backgroundImage:a.banner_image_url?`url(${a.banner_image_url})`:"none",backgroundSize:"cover",backgroundPosition:"center",backgroundRepeat:"no-repeat"},children:[a.banner_image_url&&e.jsx("div",{className:"absolute inset-0 bg-black/20",style:{backgroundColor:`${a.color||"#1e40af"}80`}}),m?e.jsx("div",{className:"h-24 w-24 absolute left-8 top-1/2 -translate-y-1/2 flex items-center justify-center rounded-lg p-2",children:e.jsx(ae,{className:"h-6 w-6 animate-spin text-muted-foreground"})}):e.jsx("img",{src:r,alt:a.name+" flag",className:"h-24 w-24 object-cover absolute left-8 top-1/2 -translate-y-1/2 cursor-pointer hover:opacity-80 transition-opacity rounded-lg p-1",onError:t=>t.currentTarget.style.display="none",onClick:()=>{r&&window.open(r,"_blank")},title:r?"Click to open image in new tab":"Nation flag"}),a.banner_text&&e.jsx("div",{className:"absolute right-4 top-1/2 -translate-y-1/2 text-center",style:{color:a.banner_text_color||"#ffffff",fontSize:`${a.banner_text_size||16}px`,fontWeight:a.banner_text_style==="bold"?"bold":"normal",fontStyle:a.banner_text_style==="italic"?"italic":"normal",textDecoration:a.banner_text_style==="underline"?"underline":"none"},children:e.jsx("div",{className:"bg-black/40 px-3 py-1 rounded-lg backdrop-blur-sm",children:a.banner_text})}),N&&(N.role==="admin"||N.role==="moderator"||N.full_name===a.leader_name)&&e.jsx(j,{size:"icon",variant:"outline",className:"absolute left-8 top-1/2 -translate-y-1/2 translate-x-16 bg-background/90 hover:bg-background z-10",onClick:()=>b(!0),title:"Upload nation image",children:e.jsx(ue,{className:"h-4 w-4"})}),N&&(N.role==="admin"||N.role==="moderator"||N.full_name===a.leader_name)&&e.jsx("div",{className:"absolute left-8 top-1/2 -translate-y-1/2 translate-x-32 z-10",children:e.jsx(ha,{nation:a,onNationUpdated:t=>{Object.assign(a,t),T(t.theme_color||"#eab308"),l&&l(t),S(x=>x+1),console.log("NationCard: Nation updated locally:",{oldThemeColor:a.theme_color,newThemeColor:t.theme_color,oldRulingEntity:a.ruling_entity,newRulingEntity:t.ruling_entity})}})})]}),e.jsx(ye,{className:"pb-0 pt-8 relative",children:e.jsxs("div",{className:"flex flex-col gap-1",children:[e.jsxs("div",{className:"flex items-center gap-2 mb-1",children:[e.jsx(ve,{className:"w-6 h-6",style:{color:w,fill:w}},`crown-${w}-${_}`),a.vassal_of&&e.jsxs("div",{className:"flex items-center gap-1 px-2 py-1 bg-orange-100 dark:bg-orange-900/30 rounded-full",children:[e.jsx(je,{className:"w-4 h-4 text-orange-600 dark:text-orange-400"}),e.jsxs("span",{className:"text-xs font-medium text-orange-700 dark:text-orange-300",children:["Vassal of ",a.vassal_of]})]}),e.jsx(Je,{className:"text-2xl font-bold text-foreground truncate",children:a.name.replace(/_/g," ")})]}),a.description&&e.jsx("div",{className:"mb-2",children:e.jsx("p",{className:"text-sm text-muted-foreground leading-relaxed",children:a.description})}),e.jsxs("div",{className:"flex items-center gap-3 flex-wrap text-sm text-muted-foreground mb-1",children:[e.jsxs("div",{className:"flex items-center gap-1",children:[e.jsx(we,{className:"w-4 h-4"}),a.towns_count||((R=a.towns)==null?void 0:R.length)||0," towns"]}),e.jsxs("div",{className:"flex items-center gap-1",children:[e.jsx(ee,{className:"w-4 h-4"}),a.ally_count||0," allies"]}),e.jsxs("span",{className:"text-xs",children:["Founded: ",a.founded]})]}),e.jsx("div",{className:"mt-2",children:a.motto&&e.jsx("p",{className:"text-xs font-medium text-primary",children:a.motto})})]})}),e.jsxs(be,{className:"pt-4 pb-2",children:[e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6 mb-4",children:[e.jsxs("div",{className:"space-y-3",children:[e.jsxs("div",{className:"flex items-center gap-2 text-muted-foreground text-xs",children:[e.jsx(ve,{className:"w-4 h-4",style:{color:w,fill:w}},`crown-leader-${w}-${_}`),e.jsx("span",{className:"font-semibold text-foreground",children:"Leader:"}),e.jsx("button",{className:"font-medium text-foreground hover:underline text-left",onClick:()=>{window.location.href=`/community?player=${encodeURIComponent(a.leader)}`},children:a.leader})]}),e.jsxs("div",{className:"flex items-center gap-2 text-muted-foreground text-xs",children:[e.jsx(we,{className:"w-4 h-4 text-blue-500"}),e.jsx("span",{className:"font-semibold text-foreground",children:"Capital:"}),e.jsx("span",{className:"font-medium text-foreground",children:a.capital})]}),a.vassal_of&&e.jsxs("div",{className:"flex items-center gap-2 text-muted-foreground text-xs",children:[e.jsx(je,{className:"w-4 h-4 text-orange-500"}),e.jsx("span",{className:"font-semibold text-foreground",children:"Vassal of:"}),e.jsx("span",{className:"font-medium text-foreground",children:a.vassal_of})]}),e.jsxs("div",{className:"flex items-center gap-2 text-muted-foreground text-xs",children:[e.jsx(ia,{className:"w-4 h-4 text-green-500"}),e.jsx("span",{className:"font-semibold text-foreground",children:"Treasury:"}),e.jsx("span",{className:"font-medium text-foreground",children:a.bank})]})]}),e.jsxs("div",{className:"space-y-3",children:[e.jsxs("div",{className:"flex items-center gap-2 text-muted-foreground text-xs",children:[e.jsx(ee,{className:"w-4 h-4 text-primary"}),e.jsx("span",{className:"font-semibold text-foreground",children:"Population:"}),e.jsxs("span",{className:"font-medium text-foreground",children:[a.population," citizens"]})]}),e.jsxs("div",{className:"flex items-center gap-2 text-muted-foreground text-xs",children:[e.jsx("span",{className:"font-semibold text-foreground",children:"Ruling Entity:"}),e.jsx("span",{className:"font-medium text-foreground",children:a.ruling_entity||"Monarch"})]}),e.jsxs("div",{className:"flex items-center gap-2 text-muted-foreground text-xs",children:[e.jsx("span",{className:"font-semibold text-foreground",children:"Government System:"}),e.jsx("span",{className:"font-medium text-foreground",children:a.government_system||"Monarchy"})]}),e.jsxs("div",{className:"flex items-center gap-2 text-muted-foreground text-xs",children:[e.jsx("span",{className:"font-semibold text-foreground",children:"Economic System:"}),e.jsx("span",{className:"font-medium text-foreground",children:a.economic_system||"Capitalist"})]})]})]}),e.jsx("hr",{className:"my-4 border-border/40"}),e.jsxs("details",{className:"group",children:[e.jsxs("summary",{className:"flex items-center gap-2 cursor-pointer text-sm font-semibold text-muted-foreground hover:text-primary transition-colors",children:[e.jsx(Ke,{className:"w-4 h-4"}),"Lore",e.jsx(Xe,{className:"w-3 h-3 ml-1 group-open:rotate-90 transition-transform duration-200"})]}),e.jsx("div",{className:"mt-2 pl-2 border-l-2 border-muted",children:e.jsx("p",{className:"text-sm text-muted-foreground leading-relaxed mb-2",children:a.lore})})]}),n&&a.towns&&a.towns.length>0&&e.jsxs("div",{className:"mt-4",children:[e.jsxs("div",{className:"text-sm font-medium text-muted-foreground mb-2",children:["Towns in ",a.name]}),e.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6",children:a.towns.map((t,x)=>e.jsxs("div",{className:"rounded-xl bg-muted/30 p-6 flex flex-col items-start shadow group hover:bg-muted/50 transition",children:[e.jsx("div",{className:"mb-3 w-full",children:e.jsx(Ze,{to:`/town/${encodeURIComponent(t.name)}`,className:"font-semibold text-base truncate hover:text-primary transition-colors cursor-pointer",children:t.name})}),e.jsxs("div",{className:"flex items-center gap-2 text-sm mb-4 w-full",children:[e.jsx(ee,{className:"w-5 h-5 text-primary"}),e.jsx("span",{className:"font-semibold",children:t.population}),e.jsx(ke,{variant:"outline",className:"text-sm flex-shrink-0 ml-auto",children:t.type})]}),e.jsx("div",{className:"flex flex-col gap-2 mt-auto w-full",children:e.jsxs(j,{size:"sm",variant:"ghost",className:"text-sm px-2 py-1 h-8 w-full",onClick:()=>d({...t,nation:a.name,nationColor:a.color||"text-primary"}),children:[e.jsx(Te,{className:"w-4 h-4 mr-1"})," Quick View"]})})]},t.name))})]}),e.jsx("div",{className:"mt-4 flex justify-center",children:e.jsx(j,{variant:"ghost",size:"sm",onClick:i,className:"flex items-center gap-2 text-muted-foreground hover:text-foreground",children:n?e.jsxs(e.Fragment,{children:[e.jsx(Qe,{className:"w-4 h-4"}),"Hide Towns"]}):e.jsxs(e.Fragment,{children:[e.jsx(ea,{className:"w-4 h-4"}),"Show Towns (",((s=a.towns)==null?void 0:s.length)||0,")"]})})})]}),e.jsx(ca,{isOpen:o,onClose:()=>b(!1),nationId:a.id,nationName:a.name,currentImageUrl:a.image_url,onImageUpdated:t=>{a.image_url=t,b(!1)}})]})},Ra=()=>{const[a,n]=c.useState([]),[i,d]=c.useState(!0),[l,u]=c.useState(null),[o,b]=c.useState(""),[_,S]=c.useState("all"),[w,T]=c.useState("grid"),[N,r]=c.useState(new Set),[m,C]=c.useState(null),[F,R]=c.useState(!1),s=async()=>{try{d(!0),u(null);const h=await W.getNationsWithTowns();n(h)}catch(h){console.error("Error fetching nations:",h),u(h instanceof Error?h.message:"Failed to fetch nations")}finally{d(!1)}};c.useEffect(()=>{s()},[]);const t=async h=>{console.log("Nation updated, refreshing nations list:",h),await s()},x=h=>{r(g=>{const p=new Set(g);return p.has(h)?p.delete(h):p.add(h),p})},D=h=>{C(h),R(!0)},v=a.filter(h=>{const g=h.name.toLowerCase().includes(o.toLowerCase())||h.leader.toLowerCase().includes(o.toLowerCase())||h.capital.toLowerCase().includes(o.toLowerCase()),p=_==="all"||h.type.toLowerCase()===_.toLowerCase();return g&&p}),P=Array.from(new Set(a.map(h=>h.type)));return i?e.jsxs("div",{className:"space-y-4",children:[e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsx("div",{className:"h-8 w-48 bg-muted animate-pulse rounded"}),e.jsxs("div",{className:"flex gap-2",children:[e.jsx("div",{className:"h-10 w-32 bg-muted animate-pulse rounded"}),e.jsx("div",{className:"h-10 w-10 bg-muted animate-pulse rounded"})]})]}),e.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6",children:[...Array(6)].map((h,g)=>e.jsx("div",{className:"h-96 bg-muted animate-pulse rounded-2xl"},g))})]}):l?e.jsxs("div",{className:"text-center py-8",children:[e.jsx("p",{className:"text-destructive mb-4",children:l}),e.jsx(j,{onClick:()=>{(async()=>{try{d(!0),u(null),await W.testDatabaseConnection();const g=await W.getNationsWithTowns();n(g)}catch(g){console.error("Error fetching nations:",g),u(g instanceof Error?g.message:"Failed to fetch nations")}finally{d(!1)}})()},children:"Retry"})]}):e.jsxs("div",{className:"space-y-6",children:[e.jsxs("div",{className:"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4",children:[e.jsxs("div",{children:[e.jsx("h2",{className:"text-2xl font-bold text-foreground",children:"Nations & Alliances"}),e.jsxs("p",{className:"text-muted-foreground",children:[v.length," of ",a.length," nations"]})]}),e.jsxs("div",{className:"flex items-center gap-2",children:[e.jsx(j,{variant:w==="grid"?"default":"outline",size:"sm",onClick:()=>T("grid"),children:e.jsx(Ee,{className:"w-4 h-4"})}),e.jsx(j,{variant:w==="list"?"default":"outline",size:"sm",onClick:()=>T("list"),children:e.jsx(Ue,{className:"w-4 h-4"})})]})]}),e.jsxs("div",{className:"flex flex-col sm:flex-row gap-4",children:[e.jsxs("div",{className:"relative flex-1",children:[e.jsx(Ae,{className:"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4"}),e.jsx(I,{placeholder:"Search nations, leaders, or capitals...",value:o,onChange:h=>b(h.target.value),className:"pl-10"})]}),e.jsxs(O,{value:_,onValueChange:S,children:[e.jsx(B,{className:"w-full sm:w-48",children:e.jsx(z,{placeholder:"Filter by type"})}),e.jsxs(G,{children:[e.jsx(y,{value:"all",children:"All Types"}),P.map(h=>e.jsx(y,{value:h,children:h},h))]})]})]}),v.length===0?e.jsxs("div",{className:"text-center py-12",children:[e.jsx("p",{className:"text-muted-foreground mb-4",children:"No nations found matching your criteria."}),e.jsx(j,{variant:"outline",onClick:()=>{b(""),S("all")},children:"Clear Filters"})]}):e.jsx("div",{className:w==="grid"?"grid grid-cols-1 md:grid-cols-2 gap-6":"space-y-4",children:v.map(h=>e.jsx(pa,{nation:h,isExpanded:N.has(h.id),onToggleExpand:()=>x(h.id),onViewTown:D,onNationUpdated:t},h.id))}),m&&e.jsx(De,{town:{id:m.id,name:m.name,mayor:m.mayor,population:m.population,type:m.type,status:m.status,founded:m.founded,nation:{name:m.nation,type:"Nation",color:m.nationColor},total_xp:m.total_xp||0,level:m.level||1,balance:m.balance||0,location_x:m.location_x,location_z:m.location_z,is_independent:m.is_independent,created_at:m.created_at||new Date().toISOString(),updated_at:m.updated_at||new Date().toISOString()},isOpen:F,onClose:()=>{R(!1),C(null)}})]})},ga=({town:a,nationName:n,nationColor:i,onViewTown:d})=>{const l=aa(),u=()=>{l(`/town/${encodeURIComponent(a.name)}`)};return e.jsxs("div",{className:"flex items-center justify-between p-3 bg-muted/30 rounded-xl hover:bg-muted/50 transition-colors",children:[e.jsxs("div",{className:"flex items-center space-x-3 flex-1",children:[e.jsx("div",{className:"w-6 h-6 flex-shrink-0",children:e.jsx(la,{townName:a.name,imageUrl:a.image_url})}),e.jsxs("div",{className:"flex-1",children:[e.jsxs("button",{onClick:u,className:"font-medium text-left hover:text-primary hover:underline transition-colors flex items-center gap-1 group",children:[a.name,e.jsx(he,{className:"w-3 h-3 opacity-0 group-hover:opacity-100 transition-opacity"})]}),e.jsxs("div",{className:"flex items-center space-x-2 text-sm text-muted-foreground",children:[e.jsxs("span",{children:["Mayor:",e.jsx("button",{className:"font-medium hover:underline text-left ml-1",onClick:o=>{o.stopPropagation(),l(`/community?player=${encodeURIComponent(a.mayor||"")}`)},children:a.mayor})]}),e.jsx("span",{children:"•"}),e.jsxs("div",{className:"flex items-center space-x-1",children:[e.jsx(ee,{className:"w-3 h-3"}),e.jsx("span",{children:a.population})]})]})]}),e.jsx("div",{className:"flex items-center space-x-2",children:e.jsx(ke,{variant:"outline",className:`text-xs ${i} border-current`,children:a.status})})]}),e.jsx(j,{size:"sm",variant:"ghost",onClick:()=>d({...a,nation:n,nationColor:i}),className:"ml-2",children:e.jsx(Te,{className:"w-4 h-4"})})]})},Ma=({searchTerm:a})=>{const[n,i]=c.useState([]),[d,l]=c.useState(!0),[u,o]=c.useState(null),[b,_]=c.useState(a||""),[S,w]=c.useState("all"),[T,N]=c.useState("grid"),[r,m]=c.useState(null),[C,F]=c.useState(!1);c.useEffect(()=>{(async()=>{try{l(!0),o(null);const x=await W.getAllTowns();i(x)}catch(x){console.error("Error fetching towns:",x),o(x instanceof Error?x.message:"Failed to fetch towns")}finally{l(!1)}})()},[]);const R=t=>{m(t),F(!0)},s=n.filter(t=>{var v;const x=t.name.toLowerCase().includes(b.toLowerCase())||t.mayor.toLowerCase().includes(b.toLowerCase())||((v=t.nation)==null?void 0:v.name)&&t.nation.name.toLowerCase().includes(b.toLowerCase()),D=S==="all"||S==="capital"&&t.capital||S==="public"&&t.public||S==="open"&&t.open;return x&&D});return d?e.jsxs("div",{className:"space-y-4",children:[e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsx("div",{className:"h-8 w-48 bg-muted animate-pulse rounded"}),e.jsxs("div",{className:"flex gap-2",children:[e.jsx("div",{className:"h-10 w-32 bg-muted animate-pulse rounded"}),e.jsx("div",{className:"h-10 w-10 bg-muted animate-pulse rounded"})]})]}),e.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6",children:[...Array(6)].map((t,x)=>e.jsx("div",{className:"h-96 bg-muted animate-pulse rounded-2xl"},x))})]}):u?e.jsxs("div",{className:"text-center py-8",children:[e.jsx("p",{className:"text-destructive mb-4",children:u}),e.jsx(j,{onClick:()=>{(async()=>{try{l(!0),o(null);const x=await W.getAllTowns();i(x)}catch(x){console.error("Error fetching towns:",x),o(x instanceof Error?x.message:"Failed to fetch towns")}finally{l(!1)}})()},children:"Retry"})]}):e.jsxs("div",{className:"space-y-6",children:[e.jsxs("div",{className:"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4",children:[e.jsxs("div",{children:[e.jsx("h2",{className:"text-2xl font-bold text-foreground",children:"All Towns"}),e.jsxs("p",{className:"text-muted-foreground",children:[s.length," of ",n.length," towns"]})]}),e.jsxs("div",{className:"flex items-center gap-2",children:[e.jsx(j,{variant:T==="grid"?"default":"outline",size:"sm",onClick:()=>N("grid"),children:e.jsx(Ee,{className:"w-4 h-4"})}),e.jsx(j,{variant:T==="list"?"default":"outline",size:"sm",onClick:()=>N("list"),children:e.jsx(Ue,{className:"w-4 h-4"})})]})]}),e.jsxs("div",{className:"flex flex-col sm:flex-row gap-4",children:[e.jsxs("div",{className:"relative flex-1",children:[e.jsx(Ae,{className:"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4"}),e.jsx(I,{placeholder:"Search towns, mayors, or nations...",value:b,onChange:t=>_(t.target.value),className:"pl-10"})]}),e.jsxs(O,{value:S,onValueChange:w,children:[e.jsx(B,{className:"w-full sm:w-48",children:e.jsx(z,{placeholder:"Filter by type"})}),e.jsxs(G,{children:[e.jsx(y,{value:"all",children:"All Towns"}),e.jsx(y,{value:"capital",children:"Capitals"}),e.jsx(y,{value:"public",children:"Public Towns"}),e.jsx(y,{value:"open",children:"Open Towns"})]})]})]}),s.length===0?e.jsxs("div",{className:"text-center py-12",children:[e.jsx("p",{className:"text-muted-foreground mb-4",children:"No towns found matching your criteria."}),e.jsx(j,{variant:"outline",onClick:()=>{_(""),w("all")},children:"Clear Filters"})]}):e.jsx("div",{className:T==="grid"?"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6":"space-y-4",children:s.map(t=>{var x,D;return e.jsx(ga,{town:t,nationName:((x=t.nation)==null?void 0:x.name)||"Independent",nationColor:((D=t.nation)==null?void 0:D.color)||"#6B7280",onViewTown:R},t.id)})}),r&&e.jsx(De,{town:{id:r.id,name:r.name,mayor:r.mayor,nation:r.nation?{name:r.nation.name,color:r.nation.color,type:r.nation.type||"Nation"}:void 0,population:r.population||0,type:r.type||"Town",status:r.status||"Active",founded:r.founded||r.created_at,is_independent:r.is_independent||!1,total_xp:r.total_xp||0,level:r.level||1,balance:r.balance||0,location_x:r.location_x,location_z:r.location_z,created_at:r.created_at,updated_at:r.updated_at},isOpen:C,onClose:()=>{F(!1),m(null)}})]})};export{Ra as N,Ma as T};

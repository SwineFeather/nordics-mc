var p=Object.defineProperty;var w=(i,e,t)=>e in i?p(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var d=(i,e,t)=>w(i,typeof e!="symbol"?e+"":e,t);import{s as c}from"./index-DUDTAd9W.js";const n={baseUrl:"https://erdconvorgecupvavlwv.supabase.co",uploadPath:"/storage/v1/object/public",cdnDomain:null,allowedDomains:["cdn.discordapp.com","media.discordapp.net","i.imgur.com","imgur.com","images-ext-1.discordapp.net","images-ext-2.discordapp.net"],maxFileSize:10*1024*1024,allowedFormats:["png","jpg","jpeg","webp","gif"],storageBucket:"nation-town-images"};class h{static generateCustomUrl(e){const{data:t}=c.storage.from(n.storageBucket).getPublicUrl(e);return t.publicUrl}static async storeImageFromUrl(e,t,r,a){const o={...this.DEFAULT_CONFIG,...a};try{this.validateExternalUrl(e,o);const s=await this.downloadImage(e);if(s.byteLength>o.maxFileSize)throw new Error(`Image too large. Maximum size is ${o.maxFileSize/1024/1024}MB`);const l=this.generateFilename(t,r),m=`${r}s/${l}`,{data:g,error:u}=await c.storage.from(n.storageBucket).upload(m,s,{contentType:this.getContentType(e),upsert:!0});if(u)throw new Error(`Failed to store image: ${u.message}`);return this.generateCustomUrl(m)}catch(s){throw console.error("Error storing image:",s),s}}static async uploadFile(e,t,r,a){const o={...this.DEFAULT_CONFIG,...a};try{this.validateFile(e,o);const s=this.generateFilename(t,r),l=`${r}s/${s}`,{data:m,error:g}=await c.storage.from(n.storageBucket).upload(l,e,{contentType:e.type,upsert:!0});if(g)throw new Error(`Failed to upload file: ${g.message}`);return this.generateCustomUrl(l)}catch(s){throw console.error("Error uploading file:",s),s}}static generateBlueMapUrl(e,t){this.DEFAULT_CONFIG;const r=this.generateFilename(e,t),a=`${t}s/${r}`;return this.generateCustomUrl(a)}static async getStoredImageUrl(e,t){try{const r=this.generateFilename(e,t),a=`${t}s/${r}`,{data:o}=c.storage.from(n.storageBucket).getPublicUrl(a);return o.publicUrl}catch(r){return console.error("Error getting stored image URL:",r),null}}static async imageExists(e,t){try{const r=this.generateFilename(e,t),a=`${t}s/${r}`,{data:o,error:s}=await c.storage.from(n.storageBucket).list(`${t}s`,{search:r});return s?(console.error("Error checking image existence:",s),!1):o&&o.length>0}catch(r){return console.error("Error checking image existence:",r),!1}}static async deleteImage(e,t){try{const r=this.generateFilename(e,t),a=`${t}s/${r}`,{error:o}=await c.storage.from(n.storageBucket).remove([a]);return o?(console.error("Error deleting image:",o),!1):!0}catch(r){return console.error("Error deleting image:",r),!1}}static validateExternalUrl(e,t){var s;const a=new URL(e).hostname.toLowerCase();if(!t.allowedDomains.some(l=>a.includes(l)))throw new Error(`Domain ${a} is not allowed. Allowed domains: ${t.allowedDomains.join(", ")}`);const o=(s=e.split(".").pop())==null?void 0:s.toLowerCase();if(!o||!t.allowedFormats.includes(o))throw new Error(`File format not allowed. Allowed formats: ${t.allowedFormats.join(", ")}`)}static validateFile(e,t){var a;if(!e.type.startsWith("image/"))throw new Error("Please select an image file");if(e.size>t.maxFileSize)throw new Error(`File size must be less than ${t.maxFileSize/1024/1024}MB`);const r="."+((a=e.name.split(".").pop())==null?void 0:a.toLowerCase());if(!t.allowedFormats.includes(r.substring(1)))throw new Error(`File format not allowed. Allowed formats: ${t.allowedFormats.join(", ")}`)}static async downloadImage(e){const t=await fetch(e);if(!t.ok)throw new Error(`Failed to download image: ${t.statusText}`);return await t.arrayBuffer()}static generateFilename(e,t){return`${this.normalizeEntityName(e)}.png`}static normalizeEntityName(e){const t=e.normalize("NFD"),r={å:"a",ä:"a",ö:"o",Å:"A",Ä:"A",Ö:"O",é:"e",è:"e",ê:"e",ë:"e",á:"a",à:"a",â:"a",ã:"a",í:"i",ì:"i",î:"i",ï:"i",ó:"o",ò:"o",ô:"o",õ:"o",ú:"u",ù:"u",û:"u",ü:"u",ý:"y",ÿ:"y",ñ:"n",ç:"c",ß:"ss","̀":"","́":"","̂":"","̃":"","̄":"","̆":"","̇":"","̈":"","̉":"","̊":"","̋":"","̌":"","̧":"","̨":""};let a=t;for(const[o,s]of Object.entries(r))a=a.replace(new RegExp(o,"g"),s);return a=a.replace(/[^a-zA-Z0-9_\s]/g,"").replace(/\s+/g,"_").toLowerCase(),a||(a="unnamed"),a}static generatePublicUrl(e,t){return`${t.baseUrl}/storage/v1/object/public/${n.storageBucket}/${e}`}static getContentType(e){var r;switch((r=e.split(".").pop())==null?void 0:r.toLowerCase()){case"png":return"image/png";case"jpg":case"jpeg":return"image/jpeg";case"webp":return"image/webp";case"gif":return"image/gif";default:return"image/png"}}static getBlueMapUrlTemplate(e){this.DEFAULT_CONFIG;const a=`${e}s/${`${e==="nation"?"%nation%":"%town%"}.png`}`;return this.generateCustomUrl(a)}}d(h,"DEFAULT_CONFIG",{baseUrl:n.baseUrl,uploadPath:n.uploadPath,allowedDomains:n.allowedDomains,maxFileSize:n.maxFileSize,allowedFormats:n.allowedFormats,storageBucket:n.storageBucket});export{h as I};

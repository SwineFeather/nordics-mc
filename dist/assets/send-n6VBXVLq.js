var x=i=>{throw TypeError(i)};var M=(i,t,s)=>t.has(i)||x("Cannot "+s);var e=(i,t,s)=>(M(i,t,"read from private field"),s?s.call(i):t.get(i)),d=(i,t,s)=>t.has(i)?x("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(i):t.set(i,s),p=(i,t,s,r)=>(M(i,t,"write to private field"),r?r.call(i,s):t.set(i,s),s),m=(i,t,s)=>(M(i,t,"access private method"),s);import{bV as k,bW as I,bX as K,bY as L,bZ as R,bK as U,r as f,b_ as j,b$ as q,I as z}from"./index-DUDTAd9W.js";var u,l,h,a,o,S,g,w,A=(w=class extends k{constructor(t,s){super();d(this,o);d(this,u);d(this,l);d(this,h);d(this,a);p(this,u,t),this.setOptions(s),this.bindMethods(),m(this,o,S).call(this)}bindMethods(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}setOptions(t){var r;const s=this.options;this.options=e(this,u).defaultMutationOptions(t),I(this.options,s)||e(this,u).getMutationCache().notify({type:"observerOptionsUpdated",mutation:e(this,h),observer:this}),s!=null&&s.mutationKey&&this.options.mutationKey&&K(s.mutationKey)!==K(this.options.mutationKey)?this.reset():((r=e(this,h))==null?void 0:r.state.status)==="pending"&&e(this,h).setOptions(this.options)}onUnsubscribe(){var t;this.hasListeners()||(t=e(this,h))==null||t.removeObserver(this)}onMutationUpdate(t){m(this,o,S).call(this),m(this,o,g).call(this,t)}getCurrentResult(){return e(this,l)}reset(){var t;(t=e(this,h))==null||t.removeObserver(this),p(this,h,void 0),m(this,o,S).call(this),m(this,o,g).call(this)}mutate(t,s){var r;return p(this,a,s),(r=e(this,h))==null||r.removeObserver(this),p(this,h,e(this,u).getMutationCache().build(e(this,u),this.options)),e(this,h).addObserver(this),e(this,h).execute(t)}},u=new WeakMap,l=new WeakMap,h=new WeakMap,a=new WeakMap,o=new WeakSet,S=function(){var s;const t=((s=e(this,h))==null?void 0:s.state)??L();p(this,l,{...t,isPending:t.status==="pending",isSuccess:t.status==="success",isError:t.status==="error",isIdle:t.status==="idle",mutate:this.mutate,reset:this.reset})},g=function(t){R.batch(()=>{var s,r,n,y,c,v,C,E;if(e(this,a)&&this.hasListeners()){const b=e(this,l).variables,O=e(this,l).context;(t==null?void 0:t.type)==="success"?((r=(s=e(this,a)).onSuccess)==null||r.call(s,t.data,b,O),(y=(n=e(this,a)).onSettled)==null||y.call(n,t.data,null,b,O)):(t==null?void 0:t.type)==="error"&&((v=(c=e(this,a)).onError)==null||v.call(c,t.error,b,O),(E=(C=e(this,a)).onSettled)==null||E.call(C,void 0,t.error,b,O))}this.listeners.forEach(b=>{b(e(this,l))})})},w);function Q(i,t){const s=U(),[r]=f.useState(()=>new A(s,i));f.useEffect(()=>{r.setOptions(i)},[r,i]);const n=f.useSyncExternalStore(f.useCallback(c=>r.subscribe(R.batchCalls(c)),[r]),()=>r.getCurrentResult(),()=>r.getCurrentResult()),y=f.useCallback((c,v)=>{r.mutate(c,v).catch(j)},[r]);if(n.error&&q(r.options.throwOnError,[n.error]))throw n.error;return{...n,mutate:y,mutateAsync:n.mutate}}/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const T=z("Send",[["path",{d:"M14.536 21.686a.5.5 0 0 0 .937-.024l6.5-19a.496.496 0 0 0-.635-.635l-19 6.5a.5.5 0 0 0-.024.937l7.93 3.18a2 2 0 0 1 1.112 1.11z",key:"1ffxy3"}],["path",{d:"m21.854 2.147-10.94 10.939",key:"12cjpa"}]]);export{T as S,Q as u};
